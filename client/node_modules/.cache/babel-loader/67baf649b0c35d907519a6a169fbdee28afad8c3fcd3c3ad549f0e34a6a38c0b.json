{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Reminders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Reminder from './Reminder';\nimport './Reminders.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    description: '',\n    dueDate: ''\n  });\n  const timeoutIdsRef = useRef({});\n  const inputRef = useRef(null);\n\n  // Fetch reminders on mount\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/reminders').then(res => setReminders(res.data)).catch(err => console.error('Error fetching reminders:', err));\n  }, []);\n\n  // Request notification permission on mount\n  useEffect(() => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        console.log('🔔 Notification permission:', permission);\n      });\n    }\n  }, []);\n\n  // Handle notifications\n  useEffect(() => {\n    Object.values(timeoutIdsRef.current).forEach(clearTimeout);\n    timeoutIdsRef.current = {};\n    const now = new Date();\n    reminders.forEach(reminder => {\n      const due = new Date(reminder.dueDate);\n      const delay = due.getTime() - now.getTime();\n      if (delay > 0 && !reminder.isDone) {\n        const timeoutId = setTimeout(() => {\n          if (Notification.permission === 'granted') {\n            new Notification('⏰ Reminder Due', {\n              body: `${reminder.title}\\n${reminder.description || ''}`\n            });\n          }\n        }, delay);\n        timeoutIdsRef.current[reminder._id] = timeoutId;\n      }\n    });\n  }, [reminders]);\n  const handleChange = e => {\n    setNewReminder({\n      ...newReminder,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addReminder = () => {\n    const {\n      title,\n      dueDate\n    } = newReminder;\n    const due = new Date(dueDate);\n    const now = new Date();\n    if (!title || !dueDate) {\n      return alert('Please fill in both Title and Due Date.');\n    }\n    if (due <= now) {\n      return alert('Due Date must be in the future.');\n    }\n    axios.post('http://localhost:5000/api/reminders', newReminder).then(res => {\n      var _inputRef$current;\n      setReminders(prev => [...prev, res.data]);\n      setNewReminder({\n        title: '',\n        description: '',\n        dueDate: ''\n      });\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }).catch(err => console.error('Error adding reminder:', err));\n  };\n  const deleteReminder = id => {\n    axios.delete(`http://localhost:5000/api/reminders/${id}`).then(() => {\n      setReminders(prev => prev.filter(rem => rem._id !== id));\n      clearTimeout(timeoutIdsRef.current[id]);\n      delete timeoutIdsRef.current[id];\n    }).catch(err => console.error('Error deleting reminder:', err));\n  };\n  const toggleDone = id => {\n    const reminder = reminders.find(r => r._id === id);\n    if (!reminder) return;\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\n      ...reminder,\n      isDone: !reminder.isDone\n    }).then(res => {\n      setReminders(prev => prev.map(r => r._id === id ? res.data : r));\n    }).catch(err => console.error('Error updating reminder:', err));\n  };\n  const sortedReminders = [...reminders].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminders-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Reminder title\",\n        value: newReminder.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description (optional)\",\n        value: newReminder.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"dueDate\",\n        value: newReminder.dueDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReminder,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-list\",\n      children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-text\",\n        children: \"No reminders yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : sortedReminders.map(reminder => /*#__PURE__*/_jsxDEV(Reminder, {\n        reminder: reminder,\n        onDelete: deleteReminder,\n        onToggleDone: toggleDone\n      }, reminder._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"Hw6/yMLFEG7D6ZX8FUz8FIIzfBc=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Reminder","axios","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","title","description","dueDate","timeoutIdsRef","inputRef","get","then","res","data","catch","err","console","error","Notification","permission","requestPermission","log","Object","values","current","forEach","clearTimeout","now","Date","reminder","due","delay","getTime","isDone","timeoutId","setTimeout","body","_id","handleChange","e","target","name","value","addReminder","alert","post","_inputRef$current","prev","focus","deleteReminder","id","delete","filter","rem","toggleDone","find","r","put","map","sortedReminders","sort","a","b","className","children","ref","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onDelete","onToggleDone","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Reminders.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Reminder from './Reminder';\r\nimport './Reminders.css';\r\nimport axios from 'axios';\r\n\r\nconst Reminders = () => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState({\r\n    title: '',\r\n    description: '',\r\n    dueDate: '',\r\n  });\r\n\r\n  const timeoutIdsRef = useRef({});\r\n  const inputRef = useRef(null);\r\n\r\n  // Fetch reminders on mount\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/reminders')\r\n      .then(res => setReminders(res.data))\r\n      .catch(err => console.error('Error fetching reminders:', err));\r\n  }, []);\r\n\r\n  // Request notification permission on mount\r\n  useEffect(() => {\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission().then(permission => {\r\n        console.log('🔔 Notification permission:', permission);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Handle notifications\r\n  useEffect(() => {\r\n    Object.values(timeoutIdsRef.current).forEach(clearTimeout);\r\n    timeoutIdsRef.current = {};\r\n\r\n    const now = new Date();\r\n\r\n    reminders.forEach(reminder => {\r\n      const due = new Date(reminder.dueDate);\r\n      const delay = due.getTime() - now.getTime();\r\n\r\n      if (delay > 0 && !reminder.isDone) {\r\n        const timeoutId = setTimeout(() => {\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('⏰ Reminder Due', {\r\n              body: `${reminder.title}\\n${reminder.description || ''}`,\r\n            });\r\n          }\r\n        }, delay);\r\n        timeoutIdsRef.current[reminder._id] = timeoutId;\r\n      }\r\n    });\r\n  }, [reminders]);\r\n\r\n  const handleChange = (e) => {\r\n    setNewReminder({ ...newReminder, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addReminder = () => {\r\n    const { title, dueDate } = newReminder;\r\n    const due = new Date(dueDate);\r\n    const now = new Date();\r\n\r\n    if (!title || !dueDate) {\r\n      return alert('Please fill in both Title and Due Date.');\r\n    }\r\n\r\n    if (due <= now) {\r\n      return alert('Due Date must be in the future.');\r\n    }\r\n\r\n    axios.post('http://localhost:5000/api/reminders', newReminder)\r\n      .then(res => {\r\n        setReminders(prev => [...prev, res.data]);\r\n        setNewReminder({ title: '', description: '', dueDate: '' });\r\n        inputRef.current?.focus();\r\n      })\r\n      .catch(err => console.error('Error adding reminder:', err));\r\n  };\r\n\r\n  const deleteReminder = (id) => {\r\n    axios.delete(`http://localhost:5000/api/reminders/${id}`)\r\n      .then(() => {\r\n        setReminders(prev => prev.filter(rem => rem._id !== id));\r\n        clearTimeout(timeoutIdsRef.current[id]);\r\n        delete timeoutIdsRef.current[id];\r\n      })\r\n      .catch(err => console.error('Error deleting reminder:', err));\r\n  };\r\n\r\n  const toggleDone = (id) => {\r\n    const reminder = reminders.find(r => r._id === id);\r\n    if (!reminder) return;\r\n\r\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\r\n      ...reminder,\r\n      isDone: !reminder.isDone\r\n    }).then(res => {\r\n      setReminders(prev => prev.map(r => (r._id === id ? res.data : r)));\r\n    }).catch(err => console.error('Error updating reminder:', err));\r\n  };\r\n\r\n  const sortedReminders = [...reminders].sort(\r\n    (a, b) => new Date(a.dueDate) - new Date(b.dueDate)\r\n  );\r\n\r\n  return (\r\n    <div className=\"reminders-page\">\r\n\r\n      <div className=\"reminder-form\">\r\n        <input\r\n          ref={inputRef}\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Reminder title\"\r\n          value={newReminder.title}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description (optional)\"\r\n          value={newReminder.description}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          name=\"dueDate\"\r\n          value={newReminder.dueDate}\r\n          onChange={handleChange}\r\n        />\r\n        <button onClick={addReminder}>Add</button>\r\n      </div>\r\n\r\n      <div className=\"reminder-list\">\r\n        {reminders.length === 0 ? (\r\n          <p className=\"empty-text\">No reminders yet. Add one above!</p>\r\n        ) : (\r\n          sortedReminders.map(reminder => (\r\n            <Reminder\r\n              key={reminder._id}\r\n              reminder={reminder}\r\n              onDelete={deleteReminder}\r\n              onToggleDone={toggleDone}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}