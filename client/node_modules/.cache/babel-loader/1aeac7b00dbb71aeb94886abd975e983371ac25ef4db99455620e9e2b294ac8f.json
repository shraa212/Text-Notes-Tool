{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport NoteCanvas from './components/NoteCanvas';\nimport LabelManager from './components/LabelManager';\nimport Topbar from './components/Topbar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeLabel, setActiveLabel] = useState('Notes');\n  const [showLabelsPopup, setShowLabelsPopup] = useState(false);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [notesKey, setNotesKey] = useState(0); // to force rerender of NoteCanvas\n\n  const toggleSidebar = () => {\n    setSidebarVisible(prev => !prev);\n  };\n  const addNewNote = async () => {\n    const newNote = {\n      content: \"New Note...\",\n      x: Math.floor(Math.random() * 600),\n      y: Math.floor(Math.random() * 400),\n      color: \"#ffff88\",\n      font: \"sans-serif\",\n      pinned: false\n    };\n    try {\n      await axios.post('http://localhost:5000/api/notes', newNote);\n      setNotesKey(prev => prev + 1); // force NoteCanvas to reload\n    } catch (err) {\n      console.error(\"Failed to add note\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      onToggleSidebar: toggleSidebar,\n      onAddNote: addNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [sidebarVisible && /*#__PURE__*/_jsxDEV(Sidebar, {\n        activeLabel: activeLabel,\n        setActiveLabel: setActiveLabel,\n        toggleLabels: setShowLabelsPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-canvas\",\n        children: /*#__PURE__*/_jsxDEV(NoteCanvas, {\n          activeLabel: activeLabel,\n          onAddNote: addNewNote\n        }, notesKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showLabelsPopup && activeLabel === 'Labels' && /*#__PURE__*/_jsxDEV(LabelManager, {\n      activeLabel: activeLabel,\n      setActiveLabel: setActiveLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4ihqVXWawhBwzEw0FHrWIpbQ4ag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","NoteCanvas","LabelManager","Topbar","axios","jsxDEV","_jsxDEV","App","_s","activeLabel","setActiveLabel","showLabelsPopup","setShowLabelsPopup","sidebarVisible","setSidebarVisible","notesKey","setNotesKey","toggleSidebar","prev","addNewNote","newNote","content","x","Math","floor","random","y","color","font","pinned","post","err","console","error","className","children","onToggleSidebar","onAddNote","fileName","_jsxFileName","lineNumber","columnNumber","toggleLabels","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport NoteCanvas from './components/NoteCanvas';\nimport LabelManager from './components/LabelManager';\nimport Topbar from './components/Topbar';\nimport axios from 'axios';\n\nfunction App() {\n  const [activeLabel, setActiveLabel] = useState('Notes');\n  const [showLabelsPopup, setShowLabelsPopup] = useState(false);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [notesKey, setNotesKey] = useState(0); // to force rerender of NoteCanvas\n\n  const toggleSidebar = () => {\n    setSidebarVisible(prev => !prev);\n  };\n\n  const addNewNote = async () => {\n    const newNote = {\n      content: \"New Note...\",\n      x: Math.floor(Math.random() * 600),\n      y: Math.floor(Math.random() * 400),\n      color: \"#ffff88\",\n      font: \"sans-serif\",\n      pinned: false\n    };\n\n    try {\n      await axios.post('http://localhost:5000/api/notes', newNote);\n      setNotesKey(prev => prev + 1); // force NoteCanvas to reload\n    } catch (err) {\n      console.error(\"Failed to add note\", err);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Topbar onToggleSidebar={toggleSidebar} onAddNote={addNewNote} />\n\n      <div className=\"main-content\">\n        {sidebarVisible && (\n          <Sidebar\n            activeLabel={activeLabel}\n            setActiveLabel={setActiveLabel}\n            toggleLabels={setShowLabelsPopup}\n          />\n        )}\n\n        <div className=\"note-canvas\">\n          <NoteCanvas key={notesKey} activeLabel={activeLabel} onAddNote={addNewNote} />\n        </div>\n      </div>\n\n      {showLabelsPopup && activeLabel === 'Labels' && (\n        <LabelManager\n          activeLabel={activeLabel}\n          setActiveLabel={setActiveLabel}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}