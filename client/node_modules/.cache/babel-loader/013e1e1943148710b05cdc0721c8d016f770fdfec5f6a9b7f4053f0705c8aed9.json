{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\NoteBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchNotes, createNote, updateNote, deleteNote } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [\"Thoughts\", \"Reminders\", \"Journal\"];\nexport default function NoteBoard() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetchNotes().then(res => setNotes(res.data));\n  }, []);\n  const handleAddNote = cat => {\n    const newNote = {\n      content: \"\",\n      x: 100,\n      y: 100,\n      color: \"#f8e1f4\",\n      font: \"Arial\",\n      pinStyle: \"ðŸ“Œ\",\n      category: cat,\n      type: cat.toLowerCase()\n    };\n    createNote(newNote).then(res => setNotes([...notes, res.data]));\n  };\n  const handleDragEnd = (e, note) => {\n    const updatedNote = {\n      ...note,\n      x: e.clientX,\n      y: e.clientY\n    };\n    updateNote(note._id, updatedNote);\n    setNotes(notes.map(n => n._id === note._id ? updatedNote : n));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [\"Sticky Note Tool\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddNote(cat),\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: cat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), notes.filter(n => n.category === cat).map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note\",\n          style: {\n            top: note.y,\n            left: note.x,\n            background: note.color,\n            fontFamily: note.font,\n            position: \"absolute\"\n          },\n          draggable: true,\n          onDragEnd: e => handleDragEnd(e, note),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: note.pinStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: note.content,\n            onChange: e => {\n              const updated = {\n                ...note,\n                content: e.target.value\n              };\n              updateNote(note._id, updated);\n              setNotes(notes.map(n => n._id === note._id ? updated : n));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteBoard, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NoteBoard;\nvar _c;\n$RefreshReg$(_c, \"NoteBoard\");","map":{"version":3,"names":["React","useEffect","useState","fetchNotes","createNote","updateNote","deleteNote","jsxDEV","_jsxDEV","categories","NoteBoard","_s","notes","setNotes","then","res","data","handleAddNote","cat","newNote","content","x","y","color","font","pinStyle","category","type","toLowerCase","handleDragEnd","e","note","updatedNote","clientX","clientY","_id","map","n","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","style","top","left","background","fontFamily","position","draggable","onDragEnd","value","onChange","updated","target","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/NoteBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchNotes, createNote, updateNote, deleteNote } from \"./api\";\r\n\r\nconst categories = [\"Thoughts\", \"Reminders\", \"Journal\"];\r\n\r\nexport default function NoteBoard() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchNotes().then(res => setNotes(res.data));\r\n  }, []);\r\n\r\n  const handleAddNote = (cat) => {\r\n    const newNote = {\r\n      content: \"\",\r\n      x: 100,\r\n      y: 100,\r\n      color: \"#f8e1f4\",\r\n      font: \"Arial\",\r\n      pinStyle: \"ðŸ“Œ\",\r\n      category: cat,\r\n      type: cat.toLowerCase()\r\n    };\r\n    createNote(newNote).then(res => setNotes([...notes, res.data]));\r\n  };\r\n\r\n  const handleDragEnd = (e, note) => {\r\n    const updatedNote = {\r\n      ...note,\r\n      x: e.clientX,\r\n      y: e.clientY\r\n    };\r\n    updateNote(note._id, updatedNote);\r\n    setNotes(notes.map(n => (n._id === note._id ? updatedNote : n)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"menu\">\r\n        Sticky Note Tool\r\n        <div>\r\n          {categories.map(cat => (\r\n            <button onClick={() => handleAddNote(cat)} key={cat}>{cat}</button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"board\">\r\n        {categories.map(cat => (\r\n          <div className=\"column\" key={cat}>\r\n            <h3>{cat}</h3>\r\n            {notes.filter(n => n.category === cat).map(note => (\r\n              <div\r\n                className=\"note\"\r\n                key={note._id}\r\n                style={{ top: note.y, left: note.x, background: note.color, fontFamily: note.font, position: \"absolute\" }}\r\n                draggable\r\n                onDragEnd={(e) => handleDragEnd(e, note)}\r\n              >\r\n                <span>{note.pinStyle}</span>\r\n                <textarea\r\n                  value={note.content}\r\n                  onChange={(e) => {\r\n                    const updated = { ...note, content: e.target.value };\r\n                    updateNote(note._id, updated);\r\n                    setNotes(notes.map(n => (n._id === note._id ? updated : n)));\r\n                  }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}