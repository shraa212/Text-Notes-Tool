{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Reminder.jsx\",\n  _s = $RefreshSig$();\n// Reminder.jsx\nimport React, { useEffect, useState } from 'react';\nimport './Reminder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminder = ({\n  reminder,\n  onDelete,\n  onToggleDone\n}) => {\n  _s();\n  const [isOverdue, setIsOverdue] = useState(false);\n  useEffect(() => {\n    const checkOverdue = () => {\n      const now = new Date();\n      const due = new Date(reminder.dueDate);\n      setIsOverdue(!reminder.isDone && due <= now);\n    };\n    checkOverdue(); // initial check\n\n    const interval = setInterval(checkOverdue, 60 * 1000); // check every minute\n    return () => clearInterval(interval);\n  }, [reminder]);\n  const formattedDate = new Date(reminder.dueDate).toLocaleString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `reminder-card ${reminder.isDone ? 'done' : ''} ${isOverdue ? 'overdue' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: reminder.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reminder-status\",\n        children: reminder.isDone ? '‚úÖ Done' : isOverdue ? '‚è∞ Overdue' : 'üïí Pending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), reminder.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"reminder-description\",\n      children: reminder.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"reminder-due\",\n      children: [\"\\uD83D\\uDCC5 \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${reminder.isDone ? 'undo' : 'mark'}`,\n        onClick: () => onToggleDone(reminder._id),\n        children: reminder.isDone ? 'Undo' : 'Mark as Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn delete\",\n        onClick: () => onDelete(reminder._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminder, \"UMidhThYQYeDhF71y2ypRO15vFc=\");\n_c = Reminder;\nexport default Reminder;\nvar _c;\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Reminder","reminder","onDelete","onToggleDone","_s","isOverdue","setIsOverdue","checkOverdue","now","Date","due","dueDate","isDone","interval","setInterval","clearInterval","formattedDate","toLocaleString","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_id","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Reminder.jsx"],"sourcesContent":["// Reminder.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Reminder.css';\r\n\r\nconst Reminder = ({ reminder, onDelete, onToggleDone }) => {\r\n  const [isOverdue, setIsOverdue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkOverdue = () => {\r\n      const now = new Date();\r\n      const due = new Date(reminder.dueDate);\r\n      setIsOverdue(!reminder.isDone && due <= now);\r\n    };\r\n\r\n    checkOverdue(); // initial check\r\n\r\n    const interval = setInterval(checkOverdue, 60 * 1000); // check every minute\r\n    return () => clearInterval(interval);\r\n  }, [reminder]);\r\n\r\n  const formattedDate = new Date(reminder.dueDate).toLocaleString();\r\n\r\n  return (\r\n    <div className={`reminder-card ${reminder.isDone ? 'done' : ''} ${isOverdue ? 'overdue' : ''}`}>\r\n      <div className=\"reminder-header\">\r\n        <h3>{reminder.title}</h3>\r\n        <span className=\"reminder-status\">\r\n          {reminder.isDone ? '‚úÖ Done' : isOverdue ? '‚è∞ Overdue' : 'üïí Pending'}\r\n        </span>\r\n      </div>\r\n\r\n      {reminder.description && <p className=\"reminder-description\">{reminder.description}</p>}\r\n\r\n      <p className=\"reminder-due\">üìÖ {formattedDate}</p>\r\n\r\n      <div className=\"reminder-actions\">\r\n        <button\r\n          className={`btn ${reminder.isDone ? 'undo' : 'mark'}`}\r\n          onClick={() => onToggleDone(reminder._id)}\r\n        >\r\n          {reminder.isDone ? 'Undo' : 'Mark as Done'}\r\n        </button>\r\n        <button className=\"btn delete\" onClick={() => onDelete(reminder._id)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}