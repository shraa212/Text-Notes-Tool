{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCategories = ['Thoughts', 'Reminders', 'Journal'];\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [categories, setCategories] = useState(defaultCategories);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/notes').then(res => setNotes(res.data));\n  }, []);\n  const handleAddNote = category => {\n    const newNote = {\n      content: '',\n      category,\n      type: category.toLowerCase(),\n      position: {\n        x: 0,\n        y: 0\n      },\n      color: '#FFF9C4',\n      font: 'Arial',\n      pin: 'ðŸ“Œ'\n    };\n    axios.post('http://localhost:5000/api/notes', newNote).then(res => {\n      setNotes([...notes, res.data]);\n    });\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const updatedNotes = [...notes];\n    const draggedNote = updatedNotes.find(n => n._id === result.draggableId);\n    draggedNote.category = result.destination.droppableId;\n    axios.put(`http://localhost:5000/api/notes/${draggedNote._id}`, draggedNote).then(() => {\n      setNotes(updatedNotes);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-bar\",\n      children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddNote(cat),\n        children: [\"\\u2795 \", cat]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: categories.map(cat => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: cat,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), notes.filter(note => note.category === cat).map((note, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: note._id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"note\",\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                style: {\n                  backgroundColor: note.color,\n                  fontFamily: note.font,\n                  ...provided.draggableProps.style\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: note.pin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: note.content,\n                  onChange: e => {\n                    const updated = {\n                      ...note,\n                      content: e.target.value\n                    };\n                    setNotes(notes.map(n => n._id === note._id ? updated : n));\n                    axios.put(`http://localhost:5000/api/notes/${note._id}`, updated);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 27\n              }, this)\n            }, note._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NAhlgkSLQgZG+Y2qXN57qOWdfWE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DragDropContext","Droppable","Draggable","v4","uuidv4","jsxDEV","_jsxDEV","defaultCategories","App","_s","notes","setNotes","categories","setCategories","get","then","res","data","handleAddNote","category","newNote","content","type","toLowerCase","position","x","y","color","font","pin","post","handleDragEnd","result","destination","updatedNotes","draggedNote","find","n","_id","draggableId","droppableId","put","className","children","map","cat","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","provided","ref","innerRef","droppableProps","filter","note","index","draggableProps","dragHandleProps","style","backgroundColor","fontFamily","value","onChange","e","updated","target","placeholder","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst defaultCategories = ['Thoughts', 'Reminders', 'Journal'];\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [categories, setCategories] = useState(defaultCategories);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/notes')\n      .then(res => setNotes(res.data));\n  }, []);\n\n  const handleAddNote = (category) => {\n    const newNote = {\n      content: '',\n      category,\n      type: category.toLowerCase(),\n      position: { x: 0, y: 0 },\n      color: '#FFF9C4',\n      font: 'Arial',\n      pin: 'ðŸ“Œ'\n    };\n    axios.post('http://localhost:5000/api/notes', newNote).then(res => {\n      setNotes([...notes, res.data]);\n    });\n  };\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const updatedNotes = [...notes];\n    const draggedNote = updatedNotes.find(n => n._id === result.draggableId);\n    draggedNote.category = result.destination.droppableId;\n    axios.put(`http://localhost:5000/api/notes/${draggedNote._id}`, draggedNote).then(() => {\n      setNotes(updatedNotes);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"menu-bar\">\n        {categories.map(cat => (\n          <button key={cat} onClick={() => handleAddNote(cat)}>âž• {cat}</button>\n        ))}\n      </div>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"columns\">\n          {categories.map(cat => (\n            <Droppable droppableId={cat} key={cat}>\n              {(provided) => (\n                <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\n                  <h2>{cat}</h2>\n                  {notes\n                    .filter(note => note.category === cat)\n                    .map((note, index) => (\n                      <Draggable draggableId={note._id} index={index} key={note._id}>\n                        {(provided) => (\n                          <div\n                            className=\"note\"\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            style={{\n                              backgroundColor: note.color,\n                              fontFamily: note.font,\n                              ...provided.draggableProps.style\n                            }}\n                          >\n                            <span>{note.pin}</span>\n                            <textarea\n                              value={note.content}\n                              onChange={(e) => {\n                                const updated = { ...note, content: e.target.value };\n                                setNotes(notes.map(n => (n._id === note._id ? updated : n)));\n                                axios.put(`http://localhost:5000/api/notes/${note._id}`, updated);\n                              }}\n                            />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}