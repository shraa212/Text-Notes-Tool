{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate\n}) => {\n  _s();\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\n    const uniqueLabels = [...new Set(updatedLabels)];\n    onUpdate({\n      ...note,\n      labels: uniqueLabels\n    });\n    setNewLabel('');\n  };\n  const handleRemoveLabel = labelToRemove => {\n    const updatedLabels = note.labels.filter(l => l !== labelToRemove);\n    onUpdate({\n      ...note,\n      labels: updatedLabels\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: {\n      backgroundColor: note.color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), note.labels && note.labels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: note.labels.map((label, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [label, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveLabel(label),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPin(note._id),\n        children: note.pinned ? 'üìå Unpin' : 'üìç Pin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLabelInput(prev => !prev),\n        children: \"\\uD83C\\uDFF7\\uFE0F Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(note._id),\n        children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"DnxI6smG0jVv4pLTCd50AuLtpeo=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Note","note","onDelete","onPin","onUpdate","_s","showLabelInput","setShowLabelInput","newLabel","setNewLabel","handleAddLabel","trimmed","trim","updatedLabels","labels","uniqueLabels","Set","handleRemoveLabel","labelToRemove","filter","l","className","style","backgroundColor","color","children","content","fileName","_jsxFileName","lineNumber","columnNumber","length","map","label","idx","onClick","type","value","onChange","e","target","placeholder","_id","pinned","prev","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\r\n    const uniqueLabels = [...new Set(updatedLabels)];\r\n    onUpdate({ ...note, labels: uniqueLabels });\r\n    setNewLabel('');\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    const updatedLabels = note.labels.filter((l) => l !== labelToRemove);\r\n    onUpdate({ ...note, labels: updatedLabels });\r\n  };\r\n\r\n  return (\r\n    <div className=\"note\" style={{ backgroundColor: note.color }}>\r\n      <div className=\"note-content\">\r\n        <p>{note.content}</p>\r\n      </div>\r\n\r\n      {note.labels && note.labels.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          {note.labels.map((label, idx) => (\r\n            <span className=\"note-label\" key={idx}>\r\n              {label}\r\n              <button onClick={() => handleRemoveLabel(label)}>‚ùå</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-actions\">\r\n        <button onClick={() => onPin(note._id)}>\r\n          {note.pinned ? 'üìå Unpin' : 'üìç Pin'}\r\n        </button>\r\n        <button onClick={() => setShowLabelInput((prev) => !prev)}>\r\n          üè∑Ô∏è Labels\r\n        </button>\r\n        <button onClick={() => onDelete(note._id)}>üóëÔ∏è Delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}