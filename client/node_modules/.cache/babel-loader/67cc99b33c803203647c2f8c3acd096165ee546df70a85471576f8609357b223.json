{"ast":null,"code":"// src/firebase.js\nimport { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvBQisC-kHjYC31q1yobSMJozW9ZkSDA8\",\n  authDomain: \"text-notes-application.firebaseapp.com\",\n  projectId: \"text-notes-application\",\n  storageBucket: \"text-notes-application.appspot.com\",\n  messagingSenderId: \"670916339162\",\n  appId: \"1:670916339162:web:a9d7deb211185b1222cce3\",\n  measurementId: \"G-HHTKHDD4MX\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Cloud Messaging\nconst messaging = getMessaging(app);\n\n// Request permission and get token\nexport const requestFirebaseNotificationPermission = async () => {\n  try {\n    const token = await getToken(messaging, {\n      vapidKey: 'BJIqvjMmW0HbJ4isZ8omGKlGvrDBgNKLSFUMOq5gItPsY6IGYTr_fT3mNvyGoOOOJ7QK6ubiAKHTQBtSgQp8ogk'\n    });\n    return token;\n  } catch (error) {\n    console.error('Permission error:', error);\n    return null;\n  }\n};\n\n// Listen to foreground messages\nexport const onMessageListener = () => new Promise(resolve => {\n  onMessage(messaging, payload => {\n    resolve(payload);\n  });\n});\nexport { messaging };","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","requestFirebaseNotificationPermission","token","vapidKey","error","console","onMessageListener","Promise","resolve","payload"],"sources":["D:/text-notes-tool/client/src/firebase.js"],"sourcesContent":["// src/firebase.js\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAvBQisC-kHjYC31q1yobSMJozW9ZkSDA8\",\r\n    authDomain: \"text-notes-application.firebaseapp.com\",\r\n    projectId: \"text-notes-application\",\r\n    storageBucket: \"text-notes-application.appspot.com\",\r\n    messagingSenderId: \"670916339162\",\r\n    appId: \"1:670916339162:web:a9d7deb211185b1222cce3\",\r\n    measurementId: \"G-HHTKHDD4MX\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Cloud Messaging\r\nconst messaging = getMessaging(app);\r\n\r\n// Request permission and get token\r\nexport const requestFirebaseNotificationPermission = async () => {\r\n  try {\r\n      const token = await getToken(messaging, {\r\n      vapidKey: 'BJIqvjMmW0HbJ4isZ8omGKlGvrDBgNKLSFUMOq5gItPsY6IGYTr_fT3mNvyGoOOOJ7QK6ubiAKHTQBtSgQp8ogk'\r\n    });\r\n    return token;\r\n  } catch (error) {\r\n    console.error('Permission error:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Listen to foreground messages\r\nexport const onMessageListener = () =>\r\n  new Promise((resolve) => {\r\n    onMessage(messaging, (payload) => {\r\n      resolve(payload);\r\n    });\r\n  });\r\n\r\nexport { messaging };\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACnB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;;AAEzC;AACA,MAAMS,SAAS,GAAGZ,YAAY,CAACW,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAME,qCAAqC,GAAG,MAAAA,CAAA,KAAY;EAC/D,IAAI;IACA,MAAMC,KAAK,GAAG,MAAMb,QAAQ,CAACW,SAAS,EAAE;MACxCG,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,OAAOD,KAAK;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAGA,CAAA,KAC/B,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvBlB,SAAS,CAACU,SAAS,EAAGS,OAAO,IAAK;IAChCD,OAAO,CAACC,OAAO,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEJ,SAAST,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}