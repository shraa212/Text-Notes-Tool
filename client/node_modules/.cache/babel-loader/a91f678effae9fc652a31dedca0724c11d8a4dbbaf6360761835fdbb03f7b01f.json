{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvBQisC-kHjYC31q1yobSMJozW9ZkSDA8\",\n  authDomain: \"text-notes-application.firebaseapp.com\",\n  projectId: \"text-notes-application\",\n  storageBucket: \"text-notes-application.appspot.com\",\n  // âœ… fixed\n  messagingSenderId: \"670916339162\",\n  appId: \"1:670916339162:web:a9d7deb211185b1222cce3\",\n  measurementId: \"G-HHTKHDD4MX\"\n};\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\n\n// âœ… Use your VAPID Key from Firebase > Cloud Messaging tab\nconst VAPID_KEY = \"BJlqvjMmW0HbJ4isZ8omGKIGvrDBgNKLSFUMOq5gltPsY6IGYTr_fT3mNvyGoOOOJ7QK6ubiAKHTQBtsgQp8ogk\";\nexport const requestFirebaseNotificationPermission = () => getToken(messaging, {\n  vapidKey: VAPID_KEY\n}).then(currentToken => {\n  if (currentToken) {\n    console.log('âœ… FCM Token:', currentToken);\n    return currentToken;\n  } else {\n    console.warn('ðŸš« No registration token available. Request permission to generate one.');\n  }\n}).catch(err => {\n  console.error('ðŸš« Error retrieving FCM token:', err);\n});\nexport const onMessageListener = () => new Promise(resolve => {\n  onMessage(messaging, payload => {\n    resolve(payload);\n  });\n});","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","messaging","VAPID_KEY","requestFirebaseNotificationPermission","vapidKey","then","currentToken","console","log","warn","catch","err","error","onMessageListener","Promise","resolve","payload"],"sources":["D:/text-notes-tool/client/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvBQisC-kHjYC31q1yobSMJozW9ZkSDA8\",\r\n  authDomain: \"text-notes-application.firebaseapp.com\",\r\n  projectId: \"text-notes-application\",\r\n  storageBucket: \"text-notes-application.appspot.com\", // âœ… fixed\r\n  messagingSenderId: \"670916339162\",\r\n  appId: \"1:670916339162:web:a9d7deb211185b1222cce3\",\r\n  measurementId: \"G-HHTKHDD4MX\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(app);\r\n\r\n// âœ… Use your VAPID Key from Firebase > Cloud Messaging tab\r\nconst VAPID_KEY = \"BJlqvjMmW0HbJ4isZ8omGKIGvrDBgNKLSFUMOq5gltPsY6IGYTr_fT3mNvyGoOOOJ7QK6ubiAKHTQBtsgQp8ogk\";\r\n\r\nexport const requestFirebaseNotificationPermission = () =>\r\n  getToken(messaging, { vapidKey: VAPID_KEY })\r\n    .then(currentToken => {\r\n      if (currentToken) {\r\n        console.log('âœ… FCM Token:', currentToken);\r\n        return currentToken;\r\n      } else {\r\n        console.warn('ðŸš« No registration token available. Request permission to generate one.');\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('ðŸš« Error retrieving FCM token:', err);\r\n    });\r\n\r\nexport const onMessageListener = () =>\r\n  new Promise(resolve => {\r\n    onMessage(messaging, payload => {\r\n      resolve(payload);\r\n    });\r\n  });\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EAAE;EACrDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGZ,YAAY,CAACW,GAAG,CAAC;;AAEnC;AACA,MAAME,SAAS,GAAG,yFAAyF;AAE3G,OAAO,MAAMC,qCAAqC,GAAGA,CAAA,KACnDb,QAAQ,CAACW,SAAS,EAAE;EAAEG,QAAQ,EAAEF;AAAU,CAAC,CAAC,CACzCG,IAAI,CAACC,YAAY,IAAI;EACpB,IAAIA,YAAY,EAAE;IAChBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,YAAY,CAAC;IACzC,OAAOA,YAAY;EACrB,CAAC,MAAM;IACLC,OAAO,CAACE,IAAI,CAAC,yEAAyE,CAAC;EACzF;AACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;EACZJ,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;AACtD,CAAC,CAAC;AAEN,OAAO,MAAME,iBAAiB,GAAGA,CAAA,KAC/B,IAAIC,OAAO,CAACC,OAAO,IAAI;EACrBxB,SAAS,CAACU,SAAS,EAAEe,OAAO,IAAI;IAC9BD,OAAO,CAACC,OAAO,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}