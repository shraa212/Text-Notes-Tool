{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fonts = [{\n  label: 'Aa',\n  size: '14px'\n}, {\n  label: 'H1',\n  size: '24px'\n}, {\n  label: 'H2',\n  size: '18px'\n}];\nconst colorOptions = ['#fff475', '#f28b82', '#fbbc04', '#ccff90', '#a7ffeb', '#cbf0f8', '#aecbfa', '#d7aefb', '#fdcfe8'];\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate\n}) => {\n  _s();\n  var _note$content, _note$content2, _note$labels, _note$labels2, _note$labels3;\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(note.content || '');\n  const [showColorPalette, setShowColorPalette] = useState(false);\n  const [showFontToolbar, setShowFontToolbar] = useState(false);\n  const [fontStyle, setFontStyle] = useState({\n    bold: false,\n    italic: false,\n    underline: false,\n    strike: false\n  });\n  const [fontSize, setFontSize] = useState('14px');\n  const noteRef = useRef(null);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (noteRef.current && !noteRef.current.contains(event.target)) {\n        setShowFontToolbar(false);\n        setShowColorPalette(false);\n        if (isEditing) handleContentUpdate();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isEditing, editedContent]);\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    onUpdate({\n      ...note,\n      labels: [...(note.labels || []), trimmed],\n      _touched: true\n    });\n    setNewLabel('');\n    setShowLabelInput(false);\n  };\n  const handleRemoveLabel = labelToRemove => {\n    const updatedLabels = note.labels.filter(label => label !== labelToRemove);\n    onUpdate({\n      ...note,\n      labels: updatedLabels,\n      _touched: true\n    });\n  };\n  const handleContentUpdate = () => {\n    setIsEditing(false);\n    onUpdate({\n      ...note,\n      content: editedContent,\n      _touched: true\n    });\n  };\n  const handleDragEnd = e => {\n    if (note.deleted) return;\n    const canvas = document.querySelector('.note-canvas');\n    if (!canvas || !noteRef.current) return;\n    const noteEl = noteRef.current;\n    const sidebar = document.querySelector('.sidebar');\n    const topbar = document.querySelector('.topbar');\n    const canvasRect = canvas.getBoundingClientRect();\n    const noteWidth = noteEl.offsetWidth;\n    const noteHeight = noteEl.offsetHeight;\n    const sidebarVisible = sidebar && window.getComputedStyle(sidebar).display !== 'none';\n    const sidebarWidth = sidebarVisible ? sidebar.offsetWidth : 0;\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\n    const margin = 10;\n    const clientX = e.clientX;\n    const clientY = e.clientY;\n    let newX = clientX - canvasRect.left - noteWidth / 2;\n    let newY = clientY - canvasRect.top - noteHeight / 2;\n    const canvasWidth = canvas.offsetWidth;\n    const canvasHeight = canvas.offsetHeight;\n    const minX = sidebarVisible ? sidebarWidth + margin : margin;\n    const maxX = canvasWidth - noteWidth - margin;\n    const minY = topbarHeight + margin;\n    const maxY = canvasHeight - noteHeight - margin;\n    const clampedX = Math.max(minX, Math.min(newX, maxX));\n    const clampedY = Math.max(minY, Math.min(newY, maxY));\n    onUpdate({\n      ...note,\n      x: clampedX,\n      y: clampedY,\n      _touched: true\n    });\n  };\n  const toggleStyle = style => {\n    setFontStyle(prev => ({\n      ...prev,\n      [style]: !prev[style]\n    }));\n  };\n  const computedStyle = {\n    fontWeight: fontStyle.bold ? 'bold' : 'normal',\n    fontStyle: fontStyle.italic ? 'italic' : 'normal',\n    textDecoration: `${fontStyle.underline ? 'underline ' : ''}${fontStyle.strike ? 'line-through' : ''}`.trim(),\n    fontSize\n  };\n  const applyFontSize = label => {\n    const selected = fonts.find(f => f.label === label);\n    if (selected) setFontSize(selected.size);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `note${note.deleted ? ' deleted' : ''}`,\n    style: {\n      backgroundColor: note.color || '#fff',\n      fontFamily: 'inherit',\n      left: note.x,\n      top: note.y,\n      position: 'absolute'\n    },\n    draggable: !note.deleted,\n    onDragEnd: handleDragEnd,\n    ref: noteRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: note.deleted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_note$content = note.content) !== null && _note$content !== void 0 && _note$content.length ? note.content : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"placeholder\",\n          children: \"Empty note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        autoFocus: true,\n        style: computedStyle,\n        placeholder: \"Write your note...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsEditing(true),\n        children: (_note$content2 = note.content) !== null && _note$content2 !== void 0 && _note$content2.length ? note.content : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"placeholder\",\n          children: \"Click to edit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: note.labels.map(label => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [label, !note.deleted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveLabel(label),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), !note.deleted && showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), !note.deleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-toggle\",\n        onClick: () => setShowFontToolbar(prev => !prev),\n        children: \"\\uD83C\\uDD70\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-toggle\",\n        onClick: () => setShowColorPalette(prev => !prev),\n        children: \"\\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), showFontToolbar && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-toolbar\",\n        children: [fonts.map((f, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => applyFontSize(f.label),\n          children: f.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle('bold'),\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle('italic'),\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle('underline'),\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle('strike'),\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), showColorPalette && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-palette\",\n        children: colorOptions.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-swatch\",\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => {\n            onUpdate({\n              ...note,\n              color,\n              _touched: true\n            });\n            setShowColorPalette(false);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: note.deleted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onUpdate({\n            ...note,\n            deleted: false\n          }),\n          children: \"\\u267B\\uFE0F Restore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(note, true),\n          children: \"\\u274C Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPin(note._id),\n          title: \"Toggle Pin\",\n          children: note.pinned ? '📌' : '📍'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!note.labels || note.labels.length === 0) {\n              setShowLabelInput(prev => !prev);\n            }\n          },\n          title: ((_note$labels2 = note.labels) === null || _note$labels2 === void 0 ? void 0 : _note$labels2.length) > 0 ? 'Remove label first' : 'Add label',\n          disabled: ((_note$labels3 = note.labels) === null || _note$labels3 === void 0 ? void 0 : _note$labels3.length) > 0,\n          children: \"\\uD83C\\uDFF7\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(note),\n          title: \"Delete\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"n4U4wF5bwwzKXkrLi4SDBg8oPEI=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","fonts","label","size","colorOptions","Note","note","onDelete","onPin","onUpdate","_s","_note$content","_note$content2","_note$labels","_note$labels2","_note$labels3","showLabelInput","setShowLabelInput","newLabel","setNewLabel","isEditing","setIsEditing","editedContent","setEditedContent","content","showColorPalette","setShowColorPalette","showFontToolbar","setShowFontToolbar","fontStyle","setFontStyle","bold","italic","underline","strike","fontSize","setFontSize","noteRef","textareaRef","handleClickOutside","event","current","contains","target","handleContentUpdate","document","addEventListener","removeEventListener","handleAddLabel","trimmed","trim","labels","_touched","handleRemoveLabel","labelToRemove","updatedLabels","filter","handleDragEnd","e","deleted","canvas","querySelector","noteEl","sidebar","topbar","canvasRect","getBoundingClientRect","noteWidth","offsetWidth","noteHeight","offsetHeight","sidebarVisible","window","getComputedStyle","display","sidebarWidth","topbarHeight","margin","clientX","clientY","newX","left","newY","top","canvasWidth","canvasHeight","minX","maxX","minY","maxY","clampedX","Math","max","min","clampedY","x","y","toggleStyle","style","prev","computedStyle","fontWeight","textDecoration","applyFontSize","selected","find","f","className","backgroundColor","color","fontFamily","position","draggable","onDragEnd","ref","children","length","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","autoFocus","placeholder","onClick","map","type","index","_id","title","pinned","disabled","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Note.css';\r\n\r\nconst fonts = [\r\n  { label: 'Aa', size: '14px' },\r\n  { label: 'H1', size: '24px' },\r\n  { label: 'H2', size: '18px' },\r\n];\r\n\r\nconst colorOptions = [\r\n  '#fff475', '#f28b82', '#fbbc04', '#ccff90', '#a7ffeb', '#cbf0f8', '#aecbfa', '#d7aefb', '#fdcfe8'\r\n];\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedContent, setEditedContent] = useState(note.content || '');\r\n  const [showColorPalette, setShowColorPalette] = useState(false);\r\n  const [showFontToolbar, setShowFontToolbar] = useState(false);\r\n  const [fontStyle, setFontStyle] = useState({ bold: false, italic: false, underline: false, strike: false });\r\n  const [fontSize, setFontSize] = useState('14px');\r\n\r\n  const noteRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (\r\n        noteRef.current &&\r\n        !noteRef.current.contains(event.target)\r\n      ) {\r\n        setShowFontToolbar(false);\r\n        setShowColorPalette(false);\r\n        if (isEditing) handleContentUpdate();\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isEditing, editedContent]);\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n    onUpdate({ ...note, labels: [...(note.labels || []), trimmed], _touched: true });\r\n    setNewLabel('');\r\n    setShowLabelInput(false);\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    const updatedLabels = note.labels.filter(label => label !== labelToRemove);\r\n    onUpdate({ ...note, labels: updatedLabels, _touched: true });\r\n  };\r\n\r\n  const handleContentUpdate = () => {\r\n    setIsEditing(false);\r\n    onUpdate({ ...note, content: editedContent, _touched: true });\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    if (note.deleted) return;\r\n\r\n    const canvas = document.querySelector('.note-canvas');\r\n    if (!canvas || !noteRef.current) return;\r\n\r\n    const noteEl = noteRef.current;\r\n    const sidebar = document.querySelector('.sidebar');\r\n    const topbar = document.querySelector('.topbar');\r\n\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    const noteWidth = noteEl.offsetWidth;\r\n    const noteHeight = noteEl.offsetHeight;\r\n\r\n    const sidebarVisible = sidebar && window.getComputedStyle(sidebar).display !== 'none';\r\n    const sidebarWidth = sidebarVisible ? sidebar.offsetWidth : 0;\r\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\r\n    const margin = 10;\r\n\r\n    const clientX = e.clientX;\r\n    const clientY = e.clientY;\r\n\r\n    let newX = clientX - canvasRect.left - noteWidth / 2;\r\n    let newY = clientY - canvasRect.top - noteHeight / 2;\r\n\r\n    const canvasWidth = canvas.offsetWidth;\r\n    const canvasHeight = canvas.offsetHeight;\r\n\r\n    const minX = sidebarVisible ? sidebarWidth + margin : margin;\r\n    const maxX = canvasWidth - noteWidth - margin;\r\n\r\n    const minY = topbarHeight + margin;\r\n    const maxY = canvasHeight - noteHeight - margin;\r\n\r\n    const clampedX = Math.max(minX, Math.min(newX, maxX));\r\n    const clampedY = Math.max(minY, Math.min(newY, maxY));\r\n\r\n    onUpdate({ ...note, x: clampedX, y: clampedY, _touched: true });\r\n  };\r\n\r\n  const toggleStyle = (style) => {\r\n    setFontStyle(prev => ({ ...prev, [style]: !prev[style] }));\r\n  };\r\n\r\n  const computedStyle = {\r\n    fontWeight: fontStyle.bold ? 'bold' : 'normal',\r\n    fontStyle: fontStyle.italic ? 'italic' : 'normal',\r\n    textDecoration: `${fontStyle.underline ? 'underline ' : ''}${fontStyle.strike ? 'line-through' : ''}`.trim(),\r\n    fontSize\r\n  };\r\n\r\n  const applyFontSize = (label) => {\r\n    const selected = fonts.find(f => f.label === label);\r\n    if (selected) setFontSize(selected.size);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`note${note.deleted ? ' deleted' : ''}`}\r\n      style={{ backgroundColor: note.color || '#fff', fontFamily: 'inherit', left: note.x, top: note.y, position: 'absolute' }}\r\n      draggable={!note.deleted}\r\n      onDragEnd={handleDragEnd}\r\n      ref={noteRef}\r\n    >\r\n      <div className=\"note-content\">\r\n        {note.deleted ? (\r\n          <p>{note.content?.length ? note.content : <i className=\"placeholder\">Empty note</i>}</p>\r\n        ) : isEditing ? (\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={editedContent}\r\n            onChange={(e) => setEditedContent(e.target.value)}\r\n            autoFocus\r\n            style={computedStyle}\r\n            placeholder=\"Write your note...\"\r\n          />\r\n        ) : (\r\n          <p onClick={() => setIsEditing(true)}>{note.content?.length ? note.content : <i className=\"placeholder\">Click to edit...</i>}</p>\r\n        )}\r\n      </div>\r\n\r\n      {note.labels?.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          {note.labels.map(label => (\r\n            <span className=\"note-label\" key={label}>\r\n              {label}\r\n              {!note.deleted && <button onClick={() => handleRemoveLabel(label)}>×</button>}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {!note.deleted && showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n        </div>\r\n      )}\r\n\r\n      {!note.deleted && (\r\n        <div className=\"note-tools\">\r\n          <div className=\"icon-toggle\" onClick={() => setShowFontToolbar(prev => !prev)}>🅰️</div>\r\n          <div className=\"icon-toggle\" onClick={() => setShowColorPalette(prev => !prev)}>🎨</div>\r\n\r\n          {showFontToolbar && (\r\n            <div className=\"font-toolbar\">\r\n              {fonts.map((f, index) => (\r\n                <button key={index} onClick={() => applyFontSize(f.label)}>{f.label}</button>\r\n              ))}\r\n              <button onClick={() => toggleStyle('bold')}>B</button>\r\n              <button onClick={() => toggleStyle('italic')}>I</button>\r\n              <button onClick={() => toggleStyle('underline')}>U</button>\r\n              <button onClick={() => toggleStyle('strike')}>S</button>\r\n            </div>\r\n          )}\r\n\r\n          {showColorPalette && (\r\n            <div className=\"color-palette\">\r\n              {colorOptions.map((color, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"color-swatch\"\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => {\r\n                    onUpdate({ ...note, color, _touched: true });\r\n                    setShowColorPalette(false);\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-actions\">\r\n        {note.deleted ? (\r\n          <>\r\n            <button onClick={() => onUpdate({ ...note, deleted: false })}>♻️ Restore</button>\r\n            <button onClick={() => onDelete(note, true)}>❌ Delete</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <button onClick={() => onPin(note._id)} title=\"Toggle Pin\">{note.pinned ? '📌' : '📍'}</button>\r\n            <button\r\n              onClick={() => {\r\n                if (!note.labels || note.labels.length === 0) {\r\n                  setShowLabelInput(prev => !prev);\r\n                }\r\n              }}\r\n              title={note.labels?.length > 0 ? 'Remove label first' : 'Add label'}\r\n              disabled={note.labels?.length > 0}\r\n            >\r\n              🏷️\r\n            </button>\r\n            <button onClick={() => onDelete(note)} title=\"Delete\">🗑️</button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}