{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Trash.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Trash.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trash = ({\n  fetchNotes\n}) => {\n  _s();\n  const [deletedNotes, setDeletedNotes] = useState([]);\n  const fetchDeletedNotes = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/notes/trash');\n      setDeletedNotes(res.data);\n    } catch (err) {\n      console.error('Failed to fetch trashed notes:', err);\n    }\n  };\n  const restoreNote = async noteId => {\n    try {\n      await axios.put(`http://localhost:5000/api/notes/${noteId}/restore`);\n      fetchDeletedNotes();\n      fetchNotes(); // refresh active notes\n    } catch (err) {\n      console.error('Failed to restore note:', err);\n    }\n  };\n  const permanentlyDeleteNote = async noteId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/notes/${noteId}?force=true`);\n      fetchDeletedNotes();\n      fetchNotes(); // also update active notes\n    } catch (err) {\n      console.error('Failed to permanently delete note:', err);\n    }\n  };\n  useEffect(() => {\n    fetchDeletedNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trash-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDDD1\\uFE0F Trash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), deletedNotes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-msg\",\n      children: \"No deleted notes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-grid\",\n      children: deletedNotes.map(note => {\n        var _note$content, _note$labels;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trash-note\",\n          style: {\n            backgroundColor: note.color || '#fff',\n            fontFamily: note.font || 'inherit'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trash-content\",\n            children: ((_note$content = note.content) === null || _note$content === void 0 ? void 0 : _note$content.trim()) || /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"placeholder\",\n              children: \"Empty note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trash-labels\",\n            children: note.labels.map((label, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trash-label\",\n              children: label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trash-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"Restore note\",\n              onClick: () => restoreNote(note._id),\n              children: \"\\u267B\\uFE0F Restore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"Delete permanently\",\n              className: \"delete-btn\",\n              onClick: () => permanentlyDeleteNote(note._id),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, note._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Trash, \"SUca/SeEbrag/Srg6uuNO5iSqFI=\");\n_c = Trash;\nexport default Trash;\nvar _c;\n$RefreshReg$(_c, \"Trash\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Trash","fetchNotes","_s","deletedNotes","setDeletedNotes","fetchDeletedNotes","res","get","data","err","console","error","restoreNote","noteId","put","permanentlyDeleteNote","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","note","_note$content","_note$labels","style","backgroundColor","color","fontFamily","font","content","trim","labels","label","index","title","onClick","_id","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Trash.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Trash.css';\r\n\r\nconst Trash = ({ fetchNotes }) => {\r\n  const [deletedNotes, setDeletedNotes] = useState([]);\r\n\r\n  const fetchDeletedNotes = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/notes/trash');\r\n      setDeletedNotes(res.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch trashed notes:', err);\r\n    }\r\n  };\r\n\r\n  const restoreNote = async (noteId) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/notes/${noteId}/restore`);\r\n      fetchDeletedNotes();\r\n      fetchNotes(); // refresh active notes\r\n    } catch (err) {\r\n      console.error('Failed to restore note:', err);\r\n    }\r\n  };\r\n\r\n  const permanentlyDeleteNote = async (noteId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/notes/${noteId}?force=true`);\r\n      fetchDeletedNotes();\r\n      fetchNotes(); // also update active notes\r\n    } catch (err) {\r\n      console.error('Failed to permanently delete note:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDeletedNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"trash-container\">\r\n      <h2>üóëÔ∏è Trash</h2>\r\n      {deletedNotes.length === 0 ? (\r\n        <p className=\"empty-msg\">No deleted notes.</p>\r\n      ) : (\r\n        <div className=\"trash-grid\">\r\n          {deletedNotes.map(note => (\r\n            <div\r\n              key={note._id}\r\n              className=\"trash-note\"\r\n              style={{\r\n                backgroundColor: note.color || '#fff',\r\n                fontFamily: note.font || 'inherit'\r\n              }}\r\n            >\r\n              <div className=\"trash-content\">\r\n                {note.content?.trim() || <i className=\"placeholder\">Empty note</i>}\r\n              </div>\r\n\r\n              {note.labels?.length > 0 && (\r\n                <div className=\"trash-labels\">\r\n                  {note.labels.map((label, index) => (\r\n                    <span key={index} className=\"trash-label\">{label}</span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"trash-actions\">\r\n                <button title=\"Restore note\" onClick={() => restoreNote(note._id)}>‚ôªÔ∏è Restore</button>\r\n                <button title=\"Delete permanently\" className=\"delete-btn\" onClick={() => permanentlyDeleteNote(note._id)}>‚ùå</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trash;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}