{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ‚úÖ Firebase messaging and service worker registration\nimport { messaging } from './firebase'; // make sure this is correctly set up\nimport { getToken } from 'firebase/messaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this));\nreportWebVitals();\n\n// ‚úÖ Request FCM token and register service worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/firebase-messaging-sw.js').then(registration => {\n      console.log('‚úÖ Service Worker registered:', registration);\n\n      // Get FCM token\n      getToken(messaging, {\n        vapidKey: 'YOUR_VAPID_KEY_HERE',\n        serviceWorkerRegistration: registration\n      }).then(currentToken => {\n        if (currentToken) {\n          console.log('üî• FCM Token:', currentToken);\n          // Optional: Send to backend\n        } else {\n          console.warn('‚ùå No FCM token available');\n        }\n      }).catch(err => {\n        console.error('Error retrieving FCM token:', err);\n      });\n    }).catch(err => {\n      console.error('‚ùå Service Worker registration failed:', err);\n    });\n  });\n}","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","messaging","getToken","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","vapidKey","serviceWorkerRegistration","currentToken","warn","catch","err","error"],"sources":["D:/text-notes-tool/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ‚úÖ Firebase messaging and service worker registration\nimport { messaging } from './firebase'; // make sure this is correctly set up\nimport { getToken } from 'firebase/messaging';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n\n// ‚úÖ Request FCM token and register service worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('/firebase-messaging-sw.js')\n      .then(registration => {\n        console.log('‚úÖ Service Worker registered:', registration);\n\n        // Get FCM token\n        getToken(messaging, { vapidKey: 'YOUR_VAPID_KEY_HERE', serviceWorkerRegistration: registration })\n          .then(currentToken => {\n            if (currentToken) {\n              console.log('üî• FCM Token:', currentToken);\n              // Optional: Send to backend\n            } else {\n              console.warn('‚ùå No FCM token available');\n            }\n          })\n          .catch(err => {\n            console.error('Error retrieving FCM token:', err);\n          });\n      })\n      .catch(err => {\n        console.error('‚ùå Service Worker registration failed:', err);\n      });\n  });\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AACA,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACP,KAAK,CAACa,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACL,GAAG;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAEDf,eAAe,CAAC,CAAC;;AAEjB;AACA,IAAI,eAAe,IAAIgB,SAAS,EAAE;EAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCF,SAAS,CAACG,aAAa,CACpBC,QAAQ,CAAC,2BAA2B,CAAC,CACrCC,IAAI,CAACC,YAAY,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,YAAY,CAAC;;MAEzD;MACApB,QAAQ,CAACD,SAAS,EAAE;QAAEwB,QAAQ,EAAE,qBAAqB;QAAEC,yBAAyB,EAAEJ;MAAa,CAAC,CAAC,CAC9FD,IAAI,CAACM,YAAY,IAAI;QACpB,IAAIA,YAAY,EAAE;UAChBJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,YAAY,CAAC;UAC1C;QACF,CAAC,MAAM;UACLJ,OAAO,CAACK,IAAI,CAAC,0BAA0B,CAAC;QAC1C;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZP,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAAC;MACnD,CAAC,CAAC;IACN,CAAC,CAAC,CACDD,KAAK,CAACC,GAAG,IAAI;MACZP,OAAO,CAACQ,KAAK,CAAC,uCAAuC,EAAED,GAAG,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}