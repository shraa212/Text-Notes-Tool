{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate\n}) => {\n  _s();\n  var _note$content, _note$labels;\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(note.content || '');\n  const noteRef = useRef(null);\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\n    const uniqueLabels = [...new Set(updatedLabels)];\n    onUpdate({\n      ...note,\n      labels: uniqueLabels\n    });\n    setNewLabel('');\n    setShowLabelInput(false);\n  };\n  const handleRemoveLabel = labelToRemove => {\n    const updatedLabels = note.labels.filter(l => l !== labelToRemove);\n    onUpdate({\n      ...note,\n      labels: updatedLabels\n    });\n  };\n  const handleContentUpdate = () => {\n    setIsEditing(false);\n    const trimmed = editedContent.trim();\n    if (!trimmed) {\n      // Blank note: delete\n      if (note._id) onDelete(note._id);else if (note.tempId) onDelete(note.tempId);\n    } else if (trimmed !== note.content) {\n      onUpdate({\n        ...note,\n        content: trimmed\n      });\n    }\n  };\n  const handleDragEnd = e => {\n    const canvas = document.querySelector('.note-canvas');\n    if (!canvas) return;\n    const canvasRect = canvas.getBoundingClientRect();\n    const noteEl = noteRef.current;\n    const sidebar = document.querySelector('.sidebar');\n    const topbar = document.querySelector('.topbar');\n    const sidebarWidth = sidebar ? sidebar.offsetWidth : 0;\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\n    const clampedX = Math.max(sidebarWidth, Math.min(newX, maxX));\n    const clampedY = Math.max(topbarHeight, Math.min(newY, maxY));\n    onUpdate({\n      ...note,\n      x: clampedX,\n      y: clampedY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: {\n      backgroundColor: note.color || '#fff',\n      fontFamily: note.font || 'inherit',\n      left: note.x,\n      top: note.y,\n      position: 'absolute'\n    },\n    draggable: true,\n    onDragEnd: handleDragEnd,\n    ref: noteRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        onBlur: handleContentUpdate,\n        onKeyDown: e => e.key === 'Enter' && handleContentUpdate(),\n        autoFocus: true,\n        placeholder: \"Write your note...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsEditing(true),\n        children: (_note$content = note.content) !== null && _note$content !== void 0 && _note$content.trim() ? note.content : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"placeholder\",\n          children: \"Click to edit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: note.labels.map((label, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [label, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveLabel(label),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: note.font || '',\n        onChange: e => onUpdate({\n          ...note,\n          font: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Default Font\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Arial\",\n          children: \"Arial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Courier New\",\n          children: \"Courier New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Times New Roman\",\n          children: \"Times New Roman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: note.color || '#ffffff',\n        onChange: e => onUpdate({\n          ...note,\n          color: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPin(note._id),\n        title: \"Toggle Pin\",\n        children: note.pinned ? '📌' : '📍'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLabelInput(prev => !prev),\n        title: \"Add Label\",\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (note._id) onDelete(note._id);else if (note.tempId) onDelete(note.tempId);\n        },\n        title: \"Delete\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"OQt7/BrmoNtMIf1tv+Q4AlC2tDU=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Note","note","onDelete","onPin","onUpdate","_s","_note$content","_note$labels","showLabelInput","setShowLabelInput","newLabel","setNewLabel","isEditing","setIsEditing","editedContent","setEditedContent","content","noteRef","handleAddLabel","trimmed","trim","updatedLabels","labels","uniqueLabels","Set","handleRemoveLabel","labelToRemove","filter","l","handleContentUpdate","_id","tempId","handleDragEnd","e","canvas","document","querySelector","canvasRect","getBoundingClientRect","noteEl","current","sidebar","topbar","sidebarWidth","offsetWidth","topbarHeight","offsetHeight","newX","clientX","left","newY","clientY","top","maxX","maxY","clampedX","Math","max","min","clampedY","x","y","className","style","backgroundColor","color","fontFamily","font","position","draggable","onDragEnd","ref","children","value","onChange","target","onBlur","onKeyDown","key","autoFocus","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","label","idx","type","title","pinned","prev","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedContent, setEditedContent] = useState(note.content || '');\r\n  const noteRef = useRef(null);\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\r\n    const uniqueLabels = [...new Set(updatedLabels)];\r\n    onUpdate({ ...note, labels: uniqueLabels });\r\n    setNewLabel('');\r\n    setShowLabelInput(false);\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    const updatedLabels = note.labels.filter((l) => l !== labelToRemove);\r\n    onUpdate({ ...note, labels: updatedLabels });\r\n  };\r\n\r\n  const handleContentUpdate = () => {\r\n    setIsEditing(false);\r\n    const trimmed = editedContent.trim();\r\n\r\n    if (!trimmed) {\r\n      // Blank note: delete\r\n      if (note._id) onDelete(note._id);\r\n      else if (note.tempId) onDelete(note.tempId);\r\n    } else if (trimmed !== note.content) {\r\n      onUpdate({ ...note, content: trimmed });\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const canvas = document.querySelector('.note-canvas');\r\n    if (!canvas) return;\r\n\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    const noteEl = noteRef.current;\r\n    const sidebar = document.querySelector('.sidebar');\r\n    const topbar = document.querySelector('.topbar');\r\n\r\n    const sidebarWidth = sidebar ? sidebar.offsetWidth : 0;\r\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\r\n\r\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\r\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\r\n\r\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\r\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\r\n\r\n    const clampedX = Math.max(sidebarWidth, Math.min(newX, maxX));\r\n    const clampedY = Math.max(topbarHeight, Math.min(newY, maxY));\r\n\r\n    onUpdate({ ...note, x: clampedX, y: clampedY });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"note\"\r\n      style={{\r\n        backgroundColor: note.color || '#fff',\r\n        fontFamily: note.font || 'inherit',\r\n        left: note.x,\r\n        top: note.y,\r\n        position: 'absolute'\r\n      }}\r\n      draggable\r\n      onDragEnd={handleDragEnd}\r\n      ref={noteRef}\r\n    >\r\n      <div className=\"note-content\">\r\n        {isEditing ? (\r\n          <textarea\r\n            value={editedContent}\r\n            onChange={(e) => setEditedContent(e.target.value)}\r\n            onBlur={handleContentUpdate}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleContentUpdate()}\r\n            autoFocus\r\n            placeholder=\"Write your note...\"\r\n          />\r\n        ) : (\r\n          <p onClick={() => setIsEditing(true)}>\r\n            {note.content?.trim() ? note.content : (\r\n              <i className=\"placeholder\">Click to edit...</i>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {note.labels?.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          {note.labels.map((label, idx) => (\r\n            <span className=\"note-label\" key={idx}>\r\n              {label}\r\n              <button onClick={() => handleRemoveLabel(label)}>×</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-tools\">\r\n        <select\r\n          value={note.font || ''}\r\n          onChange={(e) => onUpdate({ ...note, font: e.target.value })}\r\n        >\r\n          <option value=\"\">Default Font</option>\r\n          <option value=\"Arial\">Arial</option>\r\n          <option value=\"Courier New\">Courier New</option>\r\n          <option value=\"Times New Roman\">Times New Roman</option>\r\n        </select>\r\n        <input\r\n          type=\"color\"\r\n          value={note.color || '#ffffff'}\r\n          onChange={(e) => onUpdate({ ...note, color: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"note-actions\">\r\n        <button onClick={() => onPin(note._id)} title=\"Toggle Pin\">\r\n          {note.pinned ? '📌' : '📍'}\r\n        </button>\r\n        <button\r\n          onClick={() => setShowLabelInput(prev => !prev)}\r\n          title=\"Add Label\"\r\n        >\r\n          🏷️\r\n        </button>\r\n        <button onClick={() => {\r\n          if (note._id) onDelete(note._id);\r\n          else if (note.tempId) onDelete(note.tempId);\r\n        }} title=\"Delete\">\r\n          🗑️\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}