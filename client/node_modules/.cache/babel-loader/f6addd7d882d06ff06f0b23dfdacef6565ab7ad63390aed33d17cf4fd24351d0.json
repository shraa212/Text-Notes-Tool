{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Reminder.jsx\";\n// Reminder.jsx\nimport React from 'react';\nimport './Reminder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminder = ({\n  reminder,\n  onDelete,\n  onToggleDone\n}) => {\n  const formattedDate = new Date(reminder.dueDate).toLocaleString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `reminder-card ${reminder.isDone ? 'done' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: reminder.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reminder-status\",\n        children: reminder.isDone ? 'âœ… Done' : 'ðŸ•’ Pending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), reminder.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"reminder-description\",\n      children: reminder.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"reminder-due\",\n      children: [\"\\uD83D\\uDCC5 \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${reminder.isDone ? 'undo' : 'mark'}`,\n        onClick: () => onToggleDone(reminder._id),\n        children: reminder.isDone ? 'Undo' : 'Mark as Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn delete\",\n        onClick: () => onDelete(reminder._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Reminder;\nexport default Reminder;\nvar _c;\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Reminder","reminder","onDelete","onToggleDone","formattedDate","Date","dueDate","toLocaleString","className","isDone","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","_id","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Reminder.jsx"],"sourcesContent":["// Reminder.jsx\r\nimport React from 'react';\r\nimport './Reminder.css';\r\n\r\nconst Reminder = ({ reminder, onDelete, onToggleDone }) => {\r\n  const formattedDate = new Date(reminder.dueDate).toLocaleString();\r\n\r\n  return (\r\n    <div className={`reminder-card ${reminder.isDone ? 'done' : ''}`}>\r\n      <div className=\"reminder-header\">\r\n        <h3>{reminder.title}</h3>\r\n        <span className=\"reminder-status\">\r\n          {reminder.isDone ? 'âœ… Done' : 'ðŸ•’ Pending'}\r\n        </span>\r\n      </div>\r\n\r\n      {reminder.description && <p className=\"reminder-description\">{reminder.description}</p>}\r\n\r\n      <p className=\"reminder-due\">ðŸ“… {formattedDate}</p>\r\n\r\n      <div className=\"reminder-actions\">\r\n        <button\r\n          className={`btn ${reminder.isDone ? 'undo' : 'mark'}`}\r\n          onClick={() => onToggleDone(reminder._id)}\r\n        >\r\n          {reminder.isDone ? 'Undo' : 'Mark as Done'}\r\n        </button>\r\n        <button className=\"btn delete\" onClick={() => onDelete(reminder._id)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminder;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACzD,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,CAACC,cAAc,CAAC,CAAC;EAEjE,oBACER,OAAA;IAAKS,SAAS,EAAE,iBAAiBP,QAAQ,CAACQ,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAC,QAAA,gBAC/DX,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BX,OAAA;QAAAW,QAAA,EAAKT,QAAQ,CAACU;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBhB,OAAA;QAAMS,SAAS,EAAC,iBAAiB;QAAAE,QAAA,EAC9BT,QAAQ,CAACQ,MAAM,GAAG,QAAQ,GAAG;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAELd,QAAQ,CAACe,WAAW,iBAAIjB,OAAA;MAAGS,SAAS,EAAC,sBAAsB;MAAAE,QAAA,EAAET,QAAQ,CAACe;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvFhB,OAAA;MAAGS,SAAS,EAAC,cAAc;MAAAE,QAAA,GAAC,eAAG,EAACN,aAAa;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElDhB,OAAA;MAAKS,SAAS,EAAC,kBAAkB;MAAAE,QAAA,gBAC/BX,OAAA;QACES,SAAS,EAAE,OAAOP,QAAQ,CAACQ,MAAM,GAAG,MAAM,GAAG,MAAM,EAAG;QACtDQ,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACF,QAAQ,CAACiB,GAAG,CAAE;QAAAR,QAAA,EAEzCT,QAAQ,CAACQ,MAAM,GAAG,MAAM,GAAG;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACThB,OAAA;QAAQS,SAAS,EAAC,YAAY;QAACS,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACD,QAAQ,CAACiB,GAAG,CAAE;QAAAR,QAAA,EAAC;MAEtE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GA7BInB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}