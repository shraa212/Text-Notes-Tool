{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#fff475', '#f28b82', '#ccff90', '#a7ffeb', '#aecbfa', '#d7aefb'];\nconst Note = ({\n  note,\n  onDelete,\n  onDragEnd\n}) => {\n  _s();\n  const [content, setContent] = useState(note.content);\n  const [showColors, setShowColors] = useState(false);\n  const [color, setColor] = useState(note.color);\n  const handleContentBlur = async () => {\n    if (content !== note.content) {\n      await updateNote({\n        content\n      });\n    }\n  };\n  const updateNote = async updateData => {\n    try {\n      await fetch(`http://localhost:5000/api/notes/${note._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateData)\n      });\n    } catch (err) {\n      console.error(\"Update failed\", err);\n    }\n  };\n  const handleColorChange = newColor => {\n    setColor(newColor);\n    setShowColors(false);\n    updateNote({\n      color: newColor\n    });\n  };\n  const togglePin = async () => {\n    const updatedPinned = !note.pinned;\n    try {\n      await updateNote({\n        pinned: updatedPinned\n      });\n      window.location.reload(); // for now, reload to reflect changes\n    } catch (err) {\n      console.error(\"Pin toggle failed\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    style: {\n      left: note.x,\n      top: note.y,\n      backgroundColor: color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"note-content\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      onBlur: handleContentBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePin,\n        children: note.pinned ? 'üìç' : 'üìå'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowColors(!showColors),\n        children: \"\\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(note._id),\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), showColors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-palette\",\n      children: COLORS.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-dot\",\n        style: {\n          backgroundColor: c\n        },\n        onClick: () => handleColorChange(c)\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"I4pPeZ3/fYeyJCKRFFRzXPwPFms=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","COLORS","Note","note","onDelete","onDragEnd","_s","content","setContent","showColors","setShowColors","color","setColor","handleContentBlur","updateNote","updateData","fetch","_id","method","headers","body","JSON","stringify","err","console","error","handleColorChange","newColor","togglePin","updatedPinned","pinned","window","location","reload","className","style","left","x","top","y","backgroundColor","children","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","c","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Note.css';\r\n\r\nconst COLORS = ['#fff475', '#f28b82', '#ccff90', '#a7ffeb', '#aecbfa', '#d7aefb'];\r\n\r\nconst Note = ({ note, onDelete, onDragEnd }) => {\r\n  const [content, setContent] = useState(note.content);\r\n  const [showColors, setShowColors] = useState(false);\r\n  const [color, setColor] = useState(note.color);\r\n\r\n  const handleContentBlur = async () => {\r\n    if (content !== note.content) {\r\n      await updateNote({ content });\r\n    }\r\n  };\r\n\r\n  const updateNote = async (updateData) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/api/notes/${note._id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(updateData),\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Update failed\", err);\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (newColor) => {\r\n    setColor(newColor);\r\n    setShowColors(false);\r\n    updateNote({ color: newColor });\r\n  };\r\n\r\n  const togglePin = async () => {\r\n    const updatedPinned = !note.pinned;\r\n    try {\r\n      await updateNote({ pinned: updatedPinned });\r\n      window.location.reload(); // for now, reload to reflect changes\r\n    } catch (err) {\r\n      console.error(\"Pin toggle failed\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"note\"\r\n      style={{ left: note.x, top: note.y, backgroundColor: color }}\r\n    >\r\n      <textarea\r\n        className=\"note-content\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        onBlur={handleContentBlur}\r\n      />\r\n      <div className=\"note-toolbar\">\r\n        <button onClick={togglePin}>{note.pinned ? 'üìç' : 'üìå'}</button>\r\n        <button onClick={() => setShowColors(!showColors)}>üé®</button>\r\n        <button onClick={() => onDelete(note._id)}>üóëÔ∏è</button>\r\n      </div>\r\n\r\n      {showColors && (\r\n        <div className=\"color-palette\">\r\n          {COLORS.map((c) => (\r\n            <div\r\n              key={c}\r\n              className=\"color-dot\"\r\n              style={{ backgroundColor: c }}\r\n              onClick={() => handleColorChange(c)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}