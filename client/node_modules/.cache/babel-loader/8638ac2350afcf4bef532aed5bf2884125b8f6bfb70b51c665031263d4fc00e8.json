{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate\n}) => {\n  _s();\n  var _note$content, _note$content2, _note$labels, _note$labels2, _note$labels3;\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(note.content || '');\n  const noteRef = useRef(null);\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    onUpdate({\n      ...note,\n      labels: [trimmed],\n      _touched: true\n    });\n    setNewLabel('');\n    setShowLabelInput(false);\n  };\n  const handleRemoveLabel = labelToRemove => {\n    onUpdate({\n      ...note,\n      labels: [],\n      _touched: true\n    });\n  };\n  const handleContentUpdate = () => {\n    setIsEditing(false);\n    const trimmed = editedContent.trim();\n    if (!trimmed && !note._touched) return;\n    if (!trimmed) {\n      if (note._id) onDelete(note._id);else if (note.tempId) onDelete(note.tempId);\n    } else if (trimmed !== note.content) {\n      onUpdate({\n        ...note,\n        content: trimmed,\n        _touched: true\n      });\n    }\n  };\n  const handleDragEnd = e => {\n    const canvas = document.querySelector('.note-canvas');\n    if (!canvas) return;\n    const canvasRect = canvas.getBoundingClientRect();\n    const noteEl = noteRef.current;\n    const sidebar = document.querySelector('.sidebar');\n    const topbar = document.querySelector('.topbar');\n    const sidebarWidth = sidebar ? sidebar.offsetWidth : 0;\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\n    const clampedX = Math.max(sidebarWidth, Math.min(newX, maxX));\n    const clampedY = Math.max(topbarHeight, Math.min(newY, maxY));\n    onUpdate({\n      ...note,\n      x: clampedX,\n      y: clampedY,\n      _touched: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `note ${!((_note$content = note.content) !== null && _note$content !== void 0 && _note$content.trim()) ? 'empty' : ''}`,\n    style: {\n      backgroundColor: note.color || '#fff',\n      fontFamily: note.font || 'inherit',\n      left: note.x,\n      top: note.y,\n      position: 'absolute'\n    },\n    draggable: true,\n    onDragEnd: handleDragEnd,\n    ref: noteRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => {\n          setEditedContent(e.target.value);\n          onUpdate({\n            ...note,\n            content: e.target.value,\n            _touched: true\n          });\n        },\n        onBlur: handleContentUpdate,\n        onKeyDown: e => e.key === 'Enter' && handleContentUpdate(),\n        autoFocus: true,\n        placeholder: \"Write your note...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsEditing(true),\n        children: (_note$content2 = note.content) !== null && _note$content2 !== void 0 && _note$content2.trim() ? note.content : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"placeholder\",\n          children: \"Click to edit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [note.labels[0], /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveLabel(note.labels[0]),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: note.font || '',\n        onChange: e => onUpdate({\n          ...note,\n          font: e.target.value,\n          _touched: true\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Default Font\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Arial\",\n          children: \"Arial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Courier New\",\n          children: \"Courier New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Times New Roman\",\n          children: \"Times New Roman\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: note.color || '#ffffff',\n        onChange: e => onUpdate({\n          ...note,\n          color: e.target.value,\n          _touched: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPin(note._id),\n        title: \"Toggle Pin\",\n        children: note.pinned ? '📌' : '📍'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (!note.labels || note.labels.length === 0) {\n            setShowLabelInput(prev => !prev);\n          }\n        },\n        title: ((_note$labels2 = note.labels) === null || _note$labels2 === void 0 ? void 0 : _note$labels2.length) > 0 ? \"Remove label first\" : \"Add label\",\n        disabled: ((_note$labels3 = note.labels) === null || _note$labels3 === void 0 ? void 0 : _note$labels3.length) > 0,\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (note._id) onDelete(note._id);else if (note.tempId) onDelete(note.tempId);\n        },\n        title: \"Delete\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"OQt7/BrmoNtMIf1tv+Q4AlC2tDU=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Note","note","onDelete","onPin","onUpdate","_s","_note$content","_note$content2","_note$labels","_note$labels2","_note$labels3","showLabelInput","setShowLabelInput","newLabel","setNewLabel","isEditing","setIsEditing","editedContent","setEditedContent","content","noteRef","handleAddLabel","trimmed","trim","labels","_touched","handleRemoveLabel","labelToRemove","handleContentUpdate","_id","tempId","handleDragEnd","e","canvas","document","querySelector","canvasRect","getBoundingClientRect","noteEl","current","sidebar","topbar","sidebarWidth","offsetWidth","topbarHeight","offsetHeight","newX","clientX","left","newY","clientY","top","maxX","maxY","clampedX","Math","max","min","clampedY","x","y","className","style","backgroundColor","color","fontFamily","font","position","draggable","onDragEnd","ref","children","value","onChange","target","onBlur","onKeyDown","key","autoFocus","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","type","title","pinned","prev","disabled","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedContent, setEditedContent] = useState(note.content || '');\r\n  const noteRef = useRef(null);\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n\r\n    onUpdate({ ...note, labels: [trimmed], _touched: true });\r\n    setNewLabel('');\r\n    setShowLabelInput(false);\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    onUpdate({ ...note, labels: [], _touched: true });\r\n  };\r\n\r\n  const handleContentUpdate = () => {\r\n    setIsEditing(false);\r\n    const trimmed = editedContent.trim();\r\n\r\n    if (!trimmed && !note._touched) return;\r\n\r\n    if (!trimmed) {\r\n      if (note._id) onDelete(note._id);\r\n      else if (note.tempId) onDelete(note.tempId);\r\n    } else if (trimmed !== note.content) {\r\n      onUpdate({ ...note, content: trimmed, _touched: true });\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const canvas = document.querySelector('.note-canvas');\r\n    if (!canvas) return;\r\n\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    const noteEl = noteRef.current;\r\n    const sidebar = document.querySelector('.sidebar');\r\n    const topbar = document.querySelector('.topbar');\r\n\r\n    const sidebarWidth = sidebar ? sidebar.offsetWidth : 0;\r\n    const topbarHeight = topbar ? topbar.offsetHeight : 0;\r\n\r\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\r\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\r\n\r\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\r\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\r\n\r\n    const clampedX = Math.max(sidebarWidth, Math.min(newX, maxX));\r\n    const clampedY = Math.max(topbarHeight, Math.min(newY, maxY));\r\n\r\n    onUpdate({ ...note, x: clampedX, y: clampedY, _touched: true });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`note ${!note.content?.trim() ? 'empty' : ''}`}\r\n      style={{\r\n        backgroundColor: note.color || '#fff',\r\n        fontFamily: note.font || 'inherit',\r\n        left: note.x,\r\n        top: note.y,\r\n        position: 'absolute'\r\n      }}\r\n      draggable\r\n      onDragEnd={handleDragEnd}\r\n      ref={noteRef}\r\n    >\r\n      <div className=\"note-content\">\r\n        {isEditing ? (\r\n          <textarea\r\n            value={editedContent}\r\n            onChange={(e) => {\r\n              setEditedContent(e.target.value);\r\n              onUpdate({ ...note, content: e.target.value, _touched: true });\r\n            }}\r\n            onBlur={handleContentUpdate}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleContentUpdate()}\r\n            autoFocus\r\n            placeholder=\"Write your note...\"\r\n          />\r\n        ) : (\r\n          <p onClick={() => setIsEditing(true)}>\r\n            {note.content?.trim() ? note.content : (\r\n              <i className=\"placeholder\">Click to edit...</i>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {note.labels?.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          <span className=\"note-label\">\r\n            {note.labels[0]}\r\n            <button onClick={() => handleRemoveLabel(note.labels[0])}>×</button>\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-tools\">\r\n        <select\r\n          value={note.font || ''}\r\n          onChange={(e) => onUpdate({ ...note, font: e.target.value, _touched: true })}\r\n        >\r\n          <option value=\"\">Default Font</option>\r\n          <option value=\"Arial\">Arial</option>\r\n          <option value=\"Courier New\">Courier New</option>\r\n          <option value=\"Times New Roman\">Times New Roman</option>\r\n        </select>\r\n        <input\r\n          type=\"color\"\r\n          value={note.color || '#ffffff'}\r\n          onChange={(e) => onUpdate({ ...note, color: e.target.value, _touched: true })}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"note-actions\">\r\n        <button onClick={() => onPin(note._id)} title=\"Toggle Pin\">\r\n          {note.pinned ? '📌' : '📍'}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            if (!note.labels || note.labels.length === 0) {\r\n              setShowLabelInput(prev => !prev);\r\n            }\r\n          }}\r\n          title={note.labels?.length > 0 ? \"Remove label first\" : \"Add label\"}\r\n          disabled={note.labels?.length > 0}\r\n        >\r\n          🏷️\r\n        </button>\r\n        <button onClick={() => {\r\n          if (note._id) onDelete(note._id);\r\n          else if (note.tempId) onDelete(note.tempId);\r\n        }} title=\"Delete\">\r\n          🗑️\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}