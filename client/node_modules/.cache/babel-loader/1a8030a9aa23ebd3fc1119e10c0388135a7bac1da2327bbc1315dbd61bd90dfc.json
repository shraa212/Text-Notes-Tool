{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\NoteCanvas.jsx\";\nimport React from 'react';\nimport Note from './Note';\nimport './NoteCanvas.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteCanvas = ({\n  notes,\n  onDelete,\n  onPin,\n  onUpdate,\n  activeLabel\n}) => {\n  const filterNotes = () => {\n    if (!notes) return [];\n\n    // Show all if base section selected\n    if (activeLabel === 'Notes' || activeLabel === 'Reminders' || activeLabel === 'Archive' || activeLabel === 'Trash') {\n      return notes;\n    }\n\n    // Show notes that include selected label\n    return notes.filter(note => note.labels && note.labels.includes(activeLabel));\n  };\n  const filteredNotes = filterNotes();\n  const pinned = filteredNotes.filter(note => note.pinned);\n  const others = filteredNotes.filter(note => !note.pinned);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-canvas\",\n    children: [pinned.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pinned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-grid\",\n        children: pinned.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          onDelete: onDelete,\n          onPin: onPin,\n          onUpdate: onUpdate\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), others.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [pinned.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Others\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-grid\",\n        children: others.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          onDelete: onDelete,\n          onPin: onPin,\n          onUpdate: onUpdate\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), filteredNotes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '2rem'\n      },\n      children: [\"No notes found for \\\"\", activeLabel, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteCanvas;\nexport default NoteCanvas;\nvar _c;\n$RefreshReg$(_c, \"NoteCanvas\");","map":{"version":3,"names":["React","Note","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteCanvas","notes","onDelete","onPin","onUpdate","activeLabel","filterNotes","filter","note","labels","includes","filteredNotes","pinned","others","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","style","textAlign","marginTop","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/NoteCanvas.jsx"],"sourcesContent":["import React from 'react';\r\nimport Note from './Note';\r\nimport './NoteCanvas.css';\r\n\r\nconst NoteCanvas = ({ notes, onDelete, onPin, onUpdate, activeLabel }) => {\r\n  const filterNotes = () => {\r\n    if (!notes) return [];\r\n\r\n    // Show all if base section selected\r\n    if (\r\n      activeLabel === 'Notes' ||\r\n      activeLabel === 'Reminders' ||\r\n      activeLabel === 'Archive' ||\r\n      activeLabel === 'Trash'\r\n    ) {\r\n      return notes;\r\n    }\r\n\r\n    // Show notes that include selected label\r\n    return notes.filter((note) =>\r\n      note.labels && note.labels.includes(activeLabel)\r\n    );\r\n  };\r\n\r\n  const filteredNotes = filterNotes();\r\n  const pinned = filteredNotes.filter((note) => note.pinned);\r\n  const others = filteredNotes.filter((note) => !note.pinned);\r\n\r\n  return (\r\n    <div className=\"note-canvas\">\r\n      {pinned.length > 0 && (\r\n        <>\r\n          <h3>Pinned</h3>\r\n          <div className=\"note-grid\">\r\n            {pinned.map((note) => (\r\n              <Note\r\n                key={note._id}\r\n                note={note}\r\n                onDelete={onDelete}\r\n                onPin={onPin}\r\n                onUpdate={onUpdate}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {others.length > 0 && (\r\n        <>\r\n          {pinned.length > 0 && <h3>Others</h3>}\r\n          <div className=\"note-grid\">\r\n            {others.map((note) => (\r\n              <Note\r\n                key={note._id}\r\n                note={note}\r\n                onDelete={onDelete}\r\n                onPin={onPin}\r\n                onUpdate={onUpdate}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {filteredNotes.length === 0 && (\r\n        <p style={{ textAlign: 'center', marginTop: '2rem' }}>\r\n          No notes found for \"{activeLabel}\"\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteCanvas;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACxE,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACL,KAAK,EAAE,OAAO,EAAE;;IAErB;IACA,IACEI,WAAW,KAAK,OAAO,IACvBA,WAAW,KAAK,WAAW,IAC3BA,WAAW,KAAK,SAAS,IACzBA,WAAW,KAAK,OAAO,EACvB;MACA,OAAOJ,KAAK;IACd;;IAEA;IACA,OAAOA,KAAK,CAACM,MAAM,CAAEC,IAAI,IACvBA,IAAI,CAACC,MAAM,IAAID,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACL,WAAW,CACjD,CAAC;EACH,CAAC;EAED,MAAMM,aAAa,GAAGL,WAAW,CAAC,CAAC;EACnC,MAAMM,MAAM,GAAGD,aAAa,CAACJ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACI,MAAM,CAAC;EAC1D,MAAMC,MAAM,GAAGF,aAAa,CAACJ,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACI,MAAM,CAAC;EAE3D,oBACEf,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzBH,MAAM,CAACI,MAAM,GAAG,CAAC,iBAChBnB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfvB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBH,MAAM,CAACS,GAAG,CAAEb,IAAI,iBACfX,OAAA,CAACF,IAAI;UAEHa,IAAI,EAAEA,IAAK;UACXN,QAAQ,EAAEA,QAAS;UACnBC,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA;QAAS,GAJdI,IAAI,CAACc,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH,EAEAP,MAAM,CAACG,MAAM,GAAG,CAAC,iBAChBnB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,GACGH,MAAM,CAACI,MAAM,GAAG,CAAC,iBAAInB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCvB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBF,MAAM,CAACQ,GAAG,CAAEb,IAAI,iBACfX,OAAA,CAACF,IAAI;UAEHa,IAAI,EAAEA,IAAK;UACXN,QAAQ,EAAEA,QAAS;UACnBC,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA;QAAS,GAJdI,IAAI,CAACc,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH,EAEAT,aAAa,CAACK,MAAM,KAAK,CAAC,iBACzBnB,OAAA;MAAG0B,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,GAAC,uBAChC,EAACV,WAAW,EAAC,IACnC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GAnEI1B,UAAU;AAqEhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}