{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./Components/Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/notes\").then(res => setNotes(res.data));\n  }, []);\n  const createNote = () => {\n    axios.post(\"http://localhost:5000/api/notes\", {\n      content: \"New Note\",\n      x: 100,\n      y: 100,\n      color: \"#FFF9C4\",\n      font: \"Arial\",\n      pinStyle: \"pin\"\n    }).then(res => setNotes([...notes, res.data]));\n  };\n  const updateNote = (id, content) => {\n    const note = notes.find(n => n._id === id);\n    axios.put(`http://localhost:5000/api/notes/${id}`, {\n      ...note,\n      content\n    });\n  };\n  const moveNote = (id, x, y) => {\n    const note = notes.find(n => n._id === id);\n    axios.put(`http://localhost:5000/api/notes/${id}`, {\n      ...note,\n      x,\n      y\n    });\n  };\n  const deleteNote = id => {\n    axios.delete(`http://localhost:5000/api/notes/${id}`);\n    setNotes(notes.filter(n => n._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createNote,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      onDragStop: moveNote,\n      onChange: updateNote,\n      onDelete: deleteNote\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Note","jsxDEV","_jsxDEV","App","_s","notes","setNotes","get","then","res","data","createNote","post","content","x","y","color","font","pinStyle","updateNote","id","note","find","n","_id","put","moveNote","deleteNote","delete","filter","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","onDragStop","onChange","onDelete","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./Components/Note\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/notes\")\n      .then(res => setNotes(res.data));\n  }, []);\n\n  const createNote = () => {\n    axios.post(\"http://localhost:5000/api/notes\", {\n      content: \"New Note\", x: 100, y: 100, color: \"#FFF9C4\", font: \"Arial\", pinStyle: \"pin\"\n    }).then(res => setNotes([...notes, res.data]));\n  };\n\n  const updateNote = (id, content) => {\n    const note = notes.find(n => n._id === id);\n    axios.put(`http://localhost:5000/api/notes/${id}`, { ...note, content });\n  };\n\n  const moveNote = (id, x, y) => {\n    const note = notes.find(n => n._id === id);\n    axios.put(`http://localhost:5000/api/notes/${id}`, { ...note, x, y });\n  };\n\n  const deleteNote = (id) => {\n    axios.delete(`http://localhost:5000/api/notes/${id}`);\n    setNotes(notes.filter(n => n._id !== id));\n  };\n\n  return (\n    <div>\n      <button onClick={createNote}>Add Note</button>\n      {notes.map(note => (\n        <Note\n          key={note._id}\n          note={note}\n          onDragStop={moveNote}\n          onChange={updateNote}\n          onDelete={deleteNote}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACQ,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,GAAG,IAAIH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAE;MAC5CC,OAAO,EAAE,UAAU;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAClF,CAAC,CAAC,CAACV,IAAI,CAACC,GAAG,IAAIH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMS,UAAU,GAAGA,CAACC,EAAE,EAAEP,OAAO,KAAK;IAClC,MAAMQ,IAAI,GAAGhB,KAAK,CAACiB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,EAAE,CAAC;IAC1CrB,KAAK,CAAC0B,GAAG,CAAC,mCAAmCL,EAAE,EAAE,EAAE;MAAE,GAAGC,IAAI;MAAER;IAAQ,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMa,QAAQ,GAAGA,CAACN,EAAE,EAAEN,CAAC,EAAEC,CAAC,KAAK;IAC7B,MAAMM,IAAI,GAAGhB,KAAK,CAACiB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,EAAE,CAAC;IAC1CrB,KAAK,CAAC0B,GAAG,CAAC,mCAAmCL,EAAE,EAAE,EAAE;MAAE,GAAGC,IAAI;MAAEP,CAAC;MAAEC;IAAE,CAAC,CAAC;EACvE,CAAC;EAED,MAAMY,UAAU,GAAIP,EAAE,IAAK;IACzBrB,KAAK,CAAC6B,MAAM,CAAC,mCAAmCR,EAAE,EAAE,CAAC;IACrDd,QAAQ,CAACD,KAAK,CAACwB,MAAM,CAACN,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,EAAE,CAAC,CAAC;EAC3C,CAAC;EAED,oBACElB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAQ6B,OAAO,EAAEpB,UAAW;MAAAmB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C9B,KAAK,CAAC+B,GAAG,CAACf,IAAI,iBACbnB,OAAA,CAACF,IAAI;MAEHqB,IAAI,EAAEA,IAAK;MACXgB,UAAU,EAAEX,QAAS;MACrBY,QAAQ,EAAEnB,UAAW;MACrBoB,QAAQ,EAAEZ;IAAW,GAJhBN,IAAI,CAACG,GAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKd,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CA3CQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}