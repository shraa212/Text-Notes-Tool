{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate,\n  onSectionMove\n}) => {\n  _s();\n  var _note$content, _note$labels;\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(note.content || '');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const noteRef = useRef(null);\n  const colors = ['#FFD700', '#FFB6C1', '#98FB98', '#87CEEB', '#DDA0DD', '#F0E68C'];\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\n    const uniqueLabels = [...new Set(updatedLabels)];\n    onUpdate({\n      ...note,\n      labels: uniqueLabels\n    });\n    setNewLabel('');\n    setShowLabelInput(false);\n  };\n  const handleRemoveLabel = labelToRemove => {\n    const updatedLabels = note.labels.filter(l => l !== labelToRemove);\n    onUpdate({\n      ...note,\n      labels: updatedLabels\n    });\n  };\n  const handleContentUpdate = () => {\n    setIsEditing(false);\n    if (editedContent !== note.content) {\n      onUpdate({\n        ...note,\n        content: editedContent\n      });\n    }\n  };\n  const handleColorChange = color => {\n    onUpdate({\n      ...note,\n      color\n    });\n    setShowColorPicker(false);\n  };\n  const handleDragStart = e => {\n    e.dataTransfer.setData('text/plain', JSON.stringify({\n      noteId: note._id,\n      type: 'note'\n    }));\n  };\n  const handleDragEnd = e => {\n    const canvas = document.querySelector('.note-canvas');\n    if (!canvas) return;\n    const canvasRect = canvas.getBoundingClientRect();\n    const noteEl = noteRef.current;\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\n\n    // Grid snapping (20px grid)\n    const gridSize = 20;\n    const snappedX = Math.round(newX / gridSize) * gridSize;\n    const snappedY = Math.round(newY / gridSize) * gridSize;\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\n    const clampedX = Math.max(0, Math.min(snappedX, maxX));\n    const clampedY = Math.max(0, Math.min(snappedY, maxY));\n    onUpdate({\n      ...note,\n      x: clampedX,\n      y: clampedY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `note ${note.pinned ? 'pinned' : ''}`,\n    style: {\n      backgroundColor: note.color || '#FFD700',\n      fontFamily: note.font || 'Arial',\n      left: note.x,\n      top: note.y,\n      position: 'absolute',\n      zIndex: isEditing ? 1000 : 100\n    },\n    draggable: true,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    ref: noteRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        onBlur: handleContentUpdate,\n        onKeyDown: e => {\n          if (e.key === 'Enter' && e.ctrlKey) {\n            handleContentUpdate();\n          }\n        },\n        autoFocus: true,\n        placeholder: \"Write your note...\",\n        style: {\n          fontFamily: note.font || 'Arial',\n          resize: 'none',\n          minHeight: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsEditing(true),\n        children: (_note$content = note.content) !== null && _note$content !== void 0 && _note$content.trim() ? note.content : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placeholder\",\n          children: \"Click to edit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: note.labels.map((label, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [label, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-label-btn\",\n          onClick: () => handleRemoveLabel(label),\n          title: \"Remove label\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') handleAddLabel();\n          if (e.key === 'Escape') setShowLabelInput(false);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker\",\n      children: colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-option\",\n        style: {\n          backgroundColor: color\n        },\n        onClick: () => handleColorChange(color)\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPin(note._id),\n        title: note.pinned ? \"Unpin\" : \"Pin\",\n        children: note.pinned ? '📌' : '📍'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowColorPicker(prev => !prev),\n        title: \"Color\",\n        children: \"\\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLabelInput(prev => !prev),\n        title: \"Label\",\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(note._id),\n        title: \"Delete\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"kUXhl8ouL5ZoRNVa/zwdEYHytOI=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Note","note","onDelete","onPin","onUpdate","onSectionMove","_s","_note$content","_note$labels","showLabelInput","setShowLabelInput","newLabel","setNewLabel","isEditing","setIsEditing","editedContent","setEditedContent","content","showColorPicker","setShowColorPicker","noteRef","colors","handleAddLabel","trimmed","trim","updatedLabels","labels","uniqueLabels","Set","handleRemoveLabel","labelToRemove","filter","l","handleContentUpdate","handleColorChange","color","handleDragStart","e","dataTransfer","setData","JSON","stringify","noteId","_id","type","handleDragEnd","canvas","document","querySelector","canvasRect","getBoundingClientRect","noteEl","current","newX","clientX","left","offsetWidth","newY","clientY","top","offsetHeight","gridSize","snappedX","Math","round","snappedY","maxX","maxY","clampedX","max","min","clampedY","x","y","className","pinned","style","backgroundColor","fontFamily","font","position","zIndex","draggable","onDragStart","onDragEnd","ref","children","value","onChange","target","onBlur","onKeyDown","key","ctrlKey","autoFocus","placeholder","resize","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","label","idx","title","prev","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate, onSectionMove }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedContent, setEditedContent] = useState(note.content || '');\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const noteRef = useRef(null);\r\n\r\n  const colors = ['#FFD700', '#FFB6C1', '#98FB98', '#87CEEB', '#DDA0DD', '#F0E68C'];\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\r\n    const uniqueLabels = [...new Set(updatedLabels)];\r\n    onUpdate({ ...note, labels: uniqueLabels });\r\n    setNewLabel('');\r\n    setShowLabelInput(false);\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    const updatedLabels = note.labels.filter((l) => l !== labelToRemove);\r\n    onUpdate({ ...note, labels: updatedLabels });\r\n  };\r\n\r\n  const handleContentUpdate = () => {\r\n    setIsEditing(false);\r\n    if (editedContent !== note.content) {\r\n      onUpdate({ ...note, content: editedContent });\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    onUpdate({ ...note, color });\r\n    setShowColorPicker(false);\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    e.dataTransfer.setData('text/plain', JSON.stringify({\r\n      noteId: note._id,\r\n      type: 'note'\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const canvas = document.querySelector('.note-canvas');\r\n    if (!canvas) return;\r\n\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    const noteEl = noteRef.current;\r\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\r\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\r\n\r\n    // Grid snapping (20px grid)\r\n    const gridSize = 20;\r\n    const snappedX = Math.round(newX / gridSize) * gridSize;\r\n    const snappedY = Math.round(newY / gridSize) * gridSize;\r\n\r\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\r\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\r\n    const clampedX = Math.max(0, Math.min(snappedX, maxX));\r\n    const clampedY = Math.max(0, Math.min(snappedY, maxY));\r\n\r\n    onUpdate({ ...note, x: clampedX, y: clampedY });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`note ${note.pinned ? 'pinned' : ''}`}\r\n      style={{\r\n        backgroundColor: note.color || '#FFD700',\r\n        fontFamily: note.font || 'Arial',\r\n        left: note.x,\r\n        top: note.y,\r\n        position: 'absolute',\r\n        zIndex: isEditing ? 1000 : 100\r\n      }}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      ref={noteRef}\r\n    >\r\n      <div className=\"note-content\">\r\n        {isEditing ? (\r\n          <textarea\r\n            value={editedContent}\r\n            onChange={(e) => setEditedContent(e.target.value)}\r\n            onBlur={handleContentUpdate}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' && e.ctrlKey) {\r\n                handleContentUpdate();\r\n              }\r\n            }}\r\n            autoFocus\r\n            placeholder=\"Write your note...\"\r\n            style={{ \r\n              fontFamily: note.font || 'Arial',\r\n              resize: 'none',\r\n              minHeight: '60px'\r\n            }}\r\n          />\r\n        ) : (\r\n          <p onClick={() => setIsEditing(true)}>\r\n            {note.content?.trim() ? note.content : (\r\n              <span className=\"placeholder\">Click to edit...</span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {note.labels?.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          {note.labels.map((label, idx) => (\r\n            <span className=\"note-label\" key={idx}>\r\n              {label}\r\n              <button \r\n                className=\"remove-label-btn\"\r\n                onClick={() => handleRemoveLabel(label)}\r\n                title=\"Remove label\"\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') handleAddLabel();\r\n              if (e.key === 'Escape') setShowLabelInput(false);\r\n            }}\r\n            autoFocus\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n        </div>\r\n      )}\r\n\r\n      {showColorPicker && (\r\n        <div className=\"color-picker\">\r\n          {colors.map(color => (\r\n            <div\r\n              key={color}\r\n              className=\"color-option\"\r\n              style={{ backgroundColor: color }}\r\n              onClick={() => handleColorChange(color)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-actions\">\r\n        <button onClick={() => onPin(note._id)} title={note.pinned ? \"Unpin\" : \"Pin\"}>\r\n          {note.pinned ? '📌' : '📍'}\r\n        </button>\r\n        <button onClick={() => setShowColorPicker(prev => !prev)} title=\"Color\">\r\n          🎨\r\n        </button>\r\n        <button onClick={() => setShowLabelInput(prev => !prev)} title=\"Label\">\r\n          🏷️\r\n        </button>\r\n        <button onClick={() => onDelete(note._id)} title=\"Delete\">\r\n          🗑️\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}