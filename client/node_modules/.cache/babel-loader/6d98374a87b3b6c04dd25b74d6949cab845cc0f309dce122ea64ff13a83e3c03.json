{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\LabelManager.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelManager = ({\n  setActiveLabel,\n  labels,\n  setLabels\n}) => {\n  _s();\n  const [newLabel, setNewLabel] = useState('');\n  const [error, setError] = useState('');\n  const modalRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (modalRef.current && !modalRef.current.contains(e.target)) {\n        setActiveLabel('Notes');\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const addLabel = async () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) {\n      setError('Label cannot be empty!');\n      return;\n    }\n    if (labels.some(label => label.name.toLowerCase() === trimmed.toLowerCase())) {\n      setError('Label already exists!');\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/labels', {\n        name: trimmed\n      });\n      setLabels(prev => [...prev, res.data].sort((a, b) => a.name.localeCompare(b.name)));\n      setNewLabel('');\n      setError('');\n    } catch (err) {\n      setError('Error adding label!');\n      console.error(err);\n    }\n  };\n  const deleteLabel = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/labels/${id}`);\n      setLabels(prev => prev.filter(label => label._id !== id));\n      if (labels.length === 1) setActiveLabel('Notes');\n    } catch (err) {\n      console.error('Error deleting label:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"label-manager-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-manager-box\",\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Labels \\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newLabel,\n          onChange: e => {\n            setNewLabel(e.target.value);\n            setError('');\n          },\n          placeholder: \"Enter label name\",\n          onKeyDown: e => e.key === 'Enter' && addLabel()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addLabel,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"label-list\",\n        children: labels.map(label => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setActiveLabel(label.name),\n            title: \"Click to filter by this label\",\n            children: label.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteLabel(label._id),\n            title: \"Delete label\",\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, label._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(LabelManager, \"jnmAY1UiesIB+WJl2ZDHW5DKhiw=\");\n_c = LabelManager;\nexport default LabelManager;\nvar _c;\n$RefreshReg$(_c, \"LabelManager\");","map":{"version":3,"names":["LabelManager","setActiveLabel","labels","setLabels","_s","newLabel","setNewLabel","useState","error","setError","modalRef","useRef","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","addLabel","trimmed","trim","some","label","name","toLowerCase","res","axios","post","prev","data","sort","a","b","localeCompare","err","console","deleteLabel","id","delete","filter","_id","length","_jsxDEV","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","placeholder","onKeyDown","key","onClick","map","title","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/LabelManager.jsx"],"sourcesContent":["const LabelManager = ({ setActiveLabel, labels, setLabels }) => {\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [error, setError] = useState('');\r\n  const modalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (modalRef.current && !modalRef.current.contains(e.target)) {\r\n        setActiveLabel('Notes');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const addLabel = async () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) {\r\n      setError('Label cannot be empty!');\r\n      return;\r\n    }\r\n\r\n    if (labels.some(label => label.name.toLowerCase() === trimmed.toLowerCase())) {\r\n      setError('Label already exists!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/labels', { name: trimmed });\r\n      setLabels(prev => [...prev, res.data].sort((a, b) => a.name.localeCompare(b.name)));\r\n      setNewLabel('');\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Error adding label!');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const deleteLabel = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/labels/${id}`);\r\n      setLabels(prev => prev.filter(label => label._id !== id));\r\n      if (labels.length === 1) setActiveLabel('Notes');\r\n    } catch (err) {\r\n      console.error('Error deleting label:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"label-manager-overlay\">\r\n      <div className=\"label-manager-box\" ref={modalRef}>\r\n        <h3>Manage Labels üè∑Ô∏è</h3>\r\n\r\n        <div className=\"label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => {\r\n              setNewLabel(e.target.value);\r\n              setError('');\r\n            }}\r\n            placeholder=\"Enter label name\"\r\n            onKeyDown={(e) => e.key === 'Enter' && addLabel()}\r\n          />\r\n          <button onClick={addLabel}>Add</button>\r\n        </div>\r\n\r\n        {error && <p className=\"label-error\">{error}</p>}\r\n\r\n        <ul className=\"label-list\">\r\n          {labels.map((label) => (\r\n            <li key={label._id}>\r\n              <span\r\n                onClick={() => setActiveLabel(label.name)}\r\n                title=\"Click to filter by this label\"\r\n              >\r\n                {label.name}\r\n              </span>\r\n              <button\r\n                onClick={() => deleteLabel(label._id)}\r\n                title=\"Delete label\"\r\n              >\r\n                ‚ùå\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LabelManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}