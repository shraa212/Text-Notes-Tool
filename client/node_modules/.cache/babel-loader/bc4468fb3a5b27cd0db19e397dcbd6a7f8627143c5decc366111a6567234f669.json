{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Reminders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Reminder from './Reminder';\nimport './Reminders.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    description: '',\n    dueDate: ''\n  });\n  const [notifiedSet, setNotifiedSet] = useState(new Set());\n\n  // Fetch all reminders\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/reminders').then(res => setReminders(res.data)).catch(err => console.error('Error fetching reminders:', err));\n  }, []);\n\n  // Request notification permission on mount\n  useEffect(() => {\n    if ('Notification' in window && Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Check for due reminders every 15 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      reminders.forEach(reminder => {\n        const due = new Date(reminder.dueDate);\n        const diff = Math.abs(due - now);\n        if (!reminder.isDone && diff < 60000 &&\n        // within 1 minute\n        !notifiedSet.has(reminder._id)) {\n          if (Notification.permission === 'granted') {\n            new Notification('Reminder Due!', {\n              body: reminder.title,\n              tag: reminder._id\n            });\n            setNotifiedSet(prev => new Set(prev).add(reminder._id));\n          }\n        }\n      });\n    }, 15000); // every 15 seconds\n\n    return () => clearInterval(interval);\n  }, [reminders, notifiedSet]);\n  const handleChange = e => {\n    setNewReminder({\n      ...newReminder,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addReminder = () => {\n    if (!newReminder.title || !newReminder.dueDate) return alert('Title and Due Date required');\n    axios.post('http://localhost:5000/api/reminders', newReminder).then(res => {\n      setReminders([...reminders, res.data]);\n      setNewReminder({\n        title: '',\n        description: '',\n        dueDate: ''\n      });\n    }).catch(err => console.error('Error adding reminder:', err));\n  };\n  const deleteReminder = id => {\n    axios.delete(`http://localhost:5000/api/reminders/${id}`).then(() => {\n      setReminders(reminders.filter(rem => rem._id !== id));\n    }).catch(err => console.error('Error deleting reminder:', err));\n  };\n  const toggleDone = id => {\n    const reminder = reminders.find(r => r._id === id);\n    if (!reminder) return;\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\n      ...reminder,\n      isDone: !reminder.isDone\n    }).then(res => {\n      setReminders(reminders.map(r => r._id === id ? res.data : r));\n    }).catch(err => console.error('Error updating reminder:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminders-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Reminder title\",\n        value: newReminder.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description (optional)\",\n        value: newReminder.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"dueDate\",\n        value: newReminder.dueDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReminder,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-list\",\n      children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-text\",\n        children: \"No reminders yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : reminders.map(reminder => /*#__PURE__*/_jsxDEV(Reminder, {\n        reminder: reminder,\n        onDelete: deleteReminder,\n        onToggleDone: toggleDone\n      }, reminder._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"GIb8ksR+DmUc46qpATarLlk3ZOc=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useEffect","useState","Reminder","axios","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","title","description","dueDate","notifiedSet","setNotifiedSet","Set","get","then","res","data","catch","err","console","error","window","Notification","permission","requestPermission","interval","setInterval","now","Date","forEach","reminder","due","diff","Math","abs","isDone","has","_id","body","tag","prev","add","clearInterval","handleChange","e","target","name","value","addReminder","alert","post","deleteReminder","id","delete","filter","rem","toggleDone","find","r","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","onDelete","onToggleDone","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Reminders.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Reminder from './Reminder';\r\nimport './Reminders.css';\r\nimport axios from 'axios';\r\n\r\nconst Reminders = () => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState({\r\n    title: '',\r\n    description: '',\r\n    dueDate: '',\r\n  });\r\n\r\n  const [notifiedSet, setNotifiedSet] = useState(new Set());\r\n\r\n  // Fetch all reminders\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/reminders')\r\n      .then(res => setReminders(res.data))\r\n      .catch(err => console.error('Error fetching reminders:', err));\r\n  }, []);\r\n\r\n  // Request notification permission on mount\r\n  useEffect(() => {\r\n    if ('Notification' in window && Notification.permission !== 'granted') {\r\n      Notification.requestPermission();\r\n    }\r\n  }, []);\r\n\r\n  // Check for due reminders every 15 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n\r\n      reminders.forEach((reminder) => {\r\n        const due = new Date(reminder.dueDate);\r\n        const diff = Math.abs(due - now);\r\n\r\n        if (\r\n          !reminder.isDone &&\r\n          diff < 60000 && // within 1 minute\r\n          !notifiedSet.has(reminder._id)\r\n        ) {\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('Reminder Due!', {\r\n              body: reminder.title,\r\n              tag: reminder._id\r\n            });\r\n            setNotifiedSet(prev => new Set(prev).add(reminder._id));\r\n          }\r\n        }\r\n      });\r\n    }, 15000); // every 15 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [reminders, notifiedSet]);\r\n\r\n  const handleChange = (e) => {\r\n    setNewReminder({ ...newReminder, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addReminder = () => {\r\n    if (!newReminder.title || !newReminder.dueDate) return alert('Title and Due Date required');\r\n\r\n    axios.post('http://localhost:5000/api/reminders', newReminder)\r\n      .then(res => {\r\n        setReminders([...reminders, res.data]);\r\n        setNewReminder({ title: '', description: '', dueDate: '' });\r\n      })\r\n      .catch(err => console.error('Error adding reminder:', err));\r\n  };\r\n\r\n  const deleteReminder = (id) => {\r\n    axios.delete(`http://localhost:5000/api/reminders/${id}`)\r\n      .then(() => {\r\n        setReminders(reminders.filter(rem => rem._id !== id));\r\n      })\r\n      .catch(err => console.error('Error deleting reminder:', err));\r\n  };\r\n\r\n  const toggleDone = (id) => {\r\n    const reminder = reminders.find(r => r._id === id);\r\n    if (!reminder) return;\r\n\r\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\r\n      ...reminder,\r\n      isDone: !reminder.isDone\r\n    }).then(res => {\r\n      setReminders(reminders.map(r => (r._id === id ? res.data : r)));\r\n    }).catch(err => console.error('Error updating reminder:', err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminders-page\">\r\n      <h2>Reminders</h2>\r\n\r\n      <div className=\"reminder-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Reminder title\"\r\n          value={newReminder.title}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description (optional)\"\r\n          value={newReminder.description}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          name=\"dueDate\"\r\n          value={newReminder.dueDate}\r\n          onChange={handleChange}\r\n        />\r\n        <button onClick={addReminder}>Add</button>\r\n      </div>\r\n\r\n      <div className=\"reminder-list\">\r\n        {reminders.length === 0 ? (\r\n          <p className=\"empty-text\">No reminders yet. Add one above!</p>\r\n        ) : (\r\n          reminders.map((reminder) => (\r\n            <Reminder\r\n              key={reminder._id}\r\n              reminder={reminder}\r\n              onDelete={deleteReminder}\r\n              onToggleDone={toggleDone}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}