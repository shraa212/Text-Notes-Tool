{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Reminders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Reminder from './Reminder';\nimport './Reminders.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    description: '',\n    dueDate: ''\n  });\n  const timeoutIdsRef = useRef([]); // ⏱ to track and clear timeouts\n\n  // Fetch reminders on mount\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/reminders').then(res => setReminders(res.data)).catch(err => console.error('Error fetching reminders:', err));\n  }, []);\n\n  // Request browser notification permission on mount\n  useEffect(() => {\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission().then(permission => {\n        console.log('🔔 Notification permission:', permission);\n      });\n    }\n  }, []);\n\n  // Set scheduled notifications for reminders\n  useEffect(() => {\n    // Clear any existing timeouts to avoid duplicates\n    timeoutIdsRef.current.forEach(id => clearTimeout(id));\n    timeoutIdsRef.current = [];\n    const now = new Date();\n    reminders.forEach(reminder => {\n      const due = new Date(reminder.dueDate);\n      const delay = due.getTime() - now.getTime();\n      if (delay > 0 && !reminder.isDone) {\n        const timeoutId = setTimeout(() => {\n          if (Notification.permission === 'granted') {\n            new Notification('⏰ Reminder Due', {\n              body: `${reminder.title}\\n${reminder.description || ''}`\n            });\n          }\n        }, delay);\n        timeoutIdsRef.current.push(timeoutId);\n      }\n    });\n  }, [reminders]);\n  const handleChange = e => {\n    setNewReminder({\n      ...newReminder,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addReminder = () => {\n    if (!newReminder.title || !newReminder.dueDate) return alert('Title and Due Date required');\n    axios.post('http://localhost:5000/api/reminders', newReminder).then(res => {\n      setReminders(prev => [...prev, res.data]);\n      setNewReminder({\n        title: '',\n        description: '',\n        dueDate: ''\n      });\n      // No notification here; will be shown when due\n    }).catch(err => console.error('Error adding reminder:', err));\n  };\n  const deleteReminder = id => {\n    axios.delete(`http://localhost:5000/api/reminders/${id}`).then(() => {\n      setReminders(prev => prev.filter(rem => rem._id !== id));\n    }).catch(err => console.error('Error deleting reminder:', err));\n  };\n  const toggleDone = id => {\n    const reminder = reminders.find(r => r._id === id);\n    if (!reminder) return;\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\n      ...reminder,\n      isDone: !reminder.isDone\n    }).then(res => {\n      setReminders(prev => prev.map(r => r._id === id ? res.data : r));\n    }).catch(err => console.error('Error updating reminder:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminders-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Reminder title\",\n        value: newReminder.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description (optional)\",\n        value: newReminder.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"dueDate\",\n        value: newReminder.dueDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReminder,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-list\",\n      children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-text\",\n        children: \"No reminders yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : reminders.map(reminder => /*#__PURE__*/_jsxDEV(Reminder, {\n        reminder: reminder,\n        onDelete: deleteReminder,\n        onToggleDone: toggleDone\n      }, reminder._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"KRWHLDSLn9g/jR54ZUdDRvFv6ig=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Reminder","axios","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","title","description","dueDate","timeoutIdsRef","get","then","res","data","catch","err","console","error","Notification","permission","requestPermission","log","current","forEach","id","clearTimeout","now","Date","reminder","due","delay","getTime","isDone","timeoutId","setTimeout","body","push","handleChange","e","target","name","value","addReminder","alert","post","prev","deleteReminder","delete","filter","rem","_id","toggleDone","find","r","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","onDelete","onToggleDone","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Reminders.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Reminder from './Reminder';\r\nimport './Reminders.css';\r\nimport axios from 'axios';\r\n\r\nconst Reminders = () => {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState({\r\n    title: '',\r\n    description: '',\r\n    dueDate: '',\r\n  });\r\n\r\n  const timeoutIdsRef = useRef([]); // ⏱ to track and clear timeouts\r\n\r\n  // Fetch reminders on mount\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/reminders')\r\n      .then(res => setReminders(res.data))\r\n      .catch(err => console.error('Error fetching reminders:', err));\r\n  }, []);\r\n\r\n  // Request browser notification permission on mount\r\n  useEffect(() => {\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission()\r\n        .then(permission => {\r\n          console.log('🔔 Notification permission:', permission);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // Set scheduled notifications for reminders\r\n  useEffect(() => {\r\n    // Clear any existing timeouts to avoid duplicates\r\n    timeoutIdsRef.current.forEach(id => clearTimeout(id));\r\n    timeoutIdsRef.current = [];\r\n\r\n    const now = new Date();\r\n\r\n    reminders.forEach(reminder => {\r\n      const due = new Date(reminder.dueDate);\r\n      const delay = due.getTime() - now.getTime();\r\n\r\n      if (delay > 0 && !reminder.isDone) {\r\n        const timeoutId = setTimeout(() => {\r\n          if (Notification.permission === 'granted') {\r\n            new Notification('⏰ Reminder Due', {\r\n              body: `${reminder.title}\\n${reminder.description || ''}`,\r\n            });\r\n          }\r\n        }, delay);\r\n\r\n        timeoutIdsRef.current.push(timeoutId);\r\n      }\r\n    });\r\n  }, [reminders]);\r\n\r\n  const handleChange = (e) => {\r\n    setNewReminder({ ...newReminder, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addReminder = () => {\r\n    if (!newReminder.title || !newReminder.dueDate)\r\n      return alert('Title and Due Date required');\r\n\r\n    axios.post('http://localhost:5000/api/reminders', newReminder)\r\n      .then(res => {\r\n        setReminders(prev => [...prev, res.data]);\r\n        setNewReminder({ title: '', description: '', dueDate: '' });\r\n        // No notification here; will be shown when due\r\n      })\r\n      .catch(err => console.error('Error adding reminder:', err));\r\n  };\r\n\r\n  const deleteReminder = (id) => {\r\n    axios.delete(`http://localhost:5000/api/reminders/${id}`)\r\n      .then(() => {\r\n        setReminders(prev => prev.filter(rem => rem._id !== id));\r\n      })\r\n      .catch(err => console.error('Error deleting reminder:', err));\r\n  };\r\n\r\n  const toggleDone = (id) => {\r\n    const reminder = reminders.find(r => r._id === id);\r\n    if (!reminder) return;\r\n\r\n    axios.put(`http://localhost:5000/api/reminders/${id}`, {\r\n      ...reminder,\r\n      isDone: !reminder.isDone\r\n    }).then(res => {\r\n      setReminders(prev => prev.map(r => (r._id === id ? res.data : r)));\r\n    }).catch(err => console.error('Error updating reminder:', err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminders-page\">\r\n      <h2>Reminders</h2>\r\n\r\n      <div className=\"reminder-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Reminder title\"\r\n          value={newReminder.title}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description (optional)\"\r\n          value={newReminder.description}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          name=\"dueDate\"\r\n          value={newReminder.dueDate}\r\n          onChange={handleChange}\r\n        />\r\n        <button onClick={addReminder}>Add</button>\r\n      </div>\r\n\r\n      <div className=\"reminder-list\">\r\n        {reminders.length === 0 ? (\r\n          <p className=\"empty-text\">No reminders yet. Add one above!</p>\r\n        ) : (\r\n          reminders.map(reminder => (\r\n            <Reminder\r\n              key={reminder._id}\r\n              reminder={reminder}\r\n              onDelete={deleteReminder}\r\n              onToggleDone={toggleDone}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reminders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}