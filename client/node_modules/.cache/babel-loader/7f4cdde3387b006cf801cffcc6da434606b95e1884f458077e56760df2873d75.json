{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\NoteCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Note from './Note';\nimport './NoteCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteCanvas = ({\n  activeLabel,\n  onAddNote\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/notes').then(res => setNotes(res.data)).catch(err => console.error(err));\n  }, []);\n  const deleteNote = async id => {\n    await axios.delete(`http://localhost:5000/api/notes/${id}`);\n    setNotes(notes.filter(note => note._id !== id));\n  };\n  const updateNote = async updatedNote => {\n    await axios.put(`http://localhost:5000/api/notes/${updatedNote._id}`, updatedNote);\n    setNotes(notes.map(n => n._id === updatedNote._id ? updatedNote : n));\n  };\n  const togglePin = id => {\n    const noteToToggle = notes.find(n => n._id === id);\n    const updated = {\n      ...noteToToggle,\n      pinned: !noteToToggle.pinned\n    };\n    updateNote(updated);\n  };\n\n  // Filter by label if a label is selected\n  const filteredNotes = activeLabel ? notes.filter(note => {\n    var _note$labels;\n    return (_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.includes(activeLabel);\n  }) : notes;\n  const pinnedNotes = filteredNotes.filter(note => note.pinned);\n  const unpinnedNotes = filteredNotes.filter(note => !note.pinned);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-notes\",\n      children: [...pinnedNotes, ...unpinnedNotes].map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        onDelete: deleteNote,\n        onPin: togglePin,\n        onUpdate: updateNote\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-note-btn\",\n      onClick: onAddNote,\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteCanvas, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NoteCanvas;\nexport default NoteCanvas;\nvar _c;\n$RefreshReg$(_c, \"NoteCanvas\");","map":{"version":3,"names":["React","useEffect","useState","axios","Note","jsxDEV","_jsxDEV","NoteCanvas","activeLabel","onAddNote","_s","notes","setNotes","get","then","res","data","catch","err","console","error","deleteNote","id","delete","filter","note","_id","updateNote","updatedNote","put","map","n","togglePin","noteToToggle","find","updated","pinned","filteredNotes","_note$labels","labels","includes","pinnedNotes","unpinnedNotes","className","children","onDelete","onPin","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/NoteCanvas.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Note from './Note';\r\nimport './NoteCanvas.css';\r\n\r\nconst NoteCanvas = ({ activeLabel, onAddNote }) => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5000/api/notes')\r\n      .then((res) => setNotes(res.data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const deleteNote = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/notes/${id}`);\r\n    setNotes(notes.filter((note) => note._id !== id));\r\n  };\r\n\r\n  const updateNote = async (updatedNote) => {\r\n    await axios.put(`http://localhost:5000/api/notes/${updatedNote._id}`, updatedNote);\r\n    setNotes(notes.map((n) => (n._id === updatedNote._id ? updatedNote : n)));\r\n  };\r\n\r\n  const togglePin = (id) => {\r\n    const noteToToggle = notes.find((n) => n._id === id);\r\n    const updated = { ...noteToToggle, pinned: !noteToToggle.pinned };\r\n    updateNote(updated);\r\n  };\r\n\r\n  // Filter by label if a label is selected\r\n  const filteredNotes = activeLabel\r\n    ? notes.filter((note) => note.labels?.includes(activeLabel))\r\n    : notes;\r\n\r\n  const pinnedNotes = filteredNotes.filter((note) => note.pinned);\r\n  const unpinnedNotes = filteredNotes.filter((note) => !note.pinned);\r\n\r\n  return (\r\n    <div className=\"canvas-section\">\r\n      <div className=\"canvas-notes\">\r\n        {[...pinnedNotes, ...unpinnedNotes].map((note) => (\r\n          <Note\r\n            key={note._id}\r\n            note={note}\r\n            onDelete={deleteNote}\r\n            onPin={togglePin}\r\n            onUpdate={updateNote}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"add-note-btn\" onClick={onAddNote}>ï¼‹</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}