{"ast":null,"code":"var _jsxFileName = \"D:\\\\text-notes-tool\\\\client\\\\src\\\\components\\\\Note.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './Note.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  note,\n  onDelete,\n  onPin,\n  onUpdate,\n  onSectionMove\n}) => {\n  _s();\n  var _note$content, _note$labels;\n  const [showLabelInput, setShowLabelInput] = useState(false);\n  const [newLabel, setNewLabel] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedContent, setEditedContent] = useState(note.content || '');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [showFontPicker, setShowFontPicker] = useState(false);\n  const noteRef = useRef(null);\n  const colors = ['#FFD700', '#FFB6C1', '#98FB98', '#87CEEB', '#DDA0DD', '#F0E68C', '#FFA07A'];\n  const fonts = ['Arial', 'Georgia', 'Times New Roman', 'Courier New', 'Verdana', 'Comic Sans MS'];\n  const handleAddLabel = () => {\n    const trimmed = newLabel.trim();\n    if (!trimmed) return;\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\n    const uniqueLabels = [...new Set(updatedLabels)];\n    onUpdate({\n      ...note,\n      labels: uniqueLabels\n    });\n    setNewLabel('');\n    setShowLabelInput(false);\n  };\n  const handleRemoveLabel = labelToRemove => {\n    const updatedLabels = note.labels.filter(l => l !== labelToRemove);\n    onUpdate({\n      ...note,\n      labels: updatedLabels\n    });\n  };\n  const handleContentUpdate = () => {\n    setIsEditing(false);\n    if (editedContent !== note.content) {\n      onUpdate({\n        ...note,\n        content: editedContent\n      });\n    }\n  };\n  const handleColorChange = color => {\n    onUpdate({\n      ...note,\n      color\n    });\n    setShowColorPicker(false);\n  };\n  const handleFontChange = font => {\n    onUpdate({\n      ...note,\n      font\n    });\n    setShowFontPicker(false);\n  };\n  const handleDragStart = e => {\n    e.dataTransfer.setData('text/plain', JSON.stringify({\n      noteId: note._id,\n      type: 'note'\n    }));\n  };\n  const handleDragEnd = e => {\n    const canvas = document.querySelector('.note-canvas');\n    if (!canvas) return;\n    const canvasRect = canvas.getBoundingClientRect();\n    const noteEl = noteRef.current;\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\n\n    // Grid snapping (20px grid)\n    const gridSize = 20;\n    const snappedX = Math.round(newX / gridSize) * gridSize;\n    const snappedY = Math.round(newY / gridSize) * gridSize;\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\n    const clampedX = Math.max(0, Math.min(snappedX, maxX));\n    const clampedY = Math.max(0, Math.min(snappedY, maxY));\n    onUpdate({\n      ...note,\n      x: clampedX,\n      y: clampedY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `note ${note.pinned ? 'pinned' : ''}`,\n    style: {\n      backgroundColor: note.color || '#FFD700',\n      fontFamily: note.font || 'Arial',\n      left: note.x,\n      top: note.y,\n      position: 'absolute',\n      zIndex: isEditing ? 1000 : 100\n    },\n    draggable: true,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    ref: noteRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value),\n        onBlur: handleContentUpdate,\n        onKeyDown: e => {\n          if (e.key === 'Enter' && e.ctrlKey) {\n            handleContentUpdate();\n          }\n        },\n        autoFocus: true,\n        placeholder: \"Write your note...\",\n        style: {\n          fontFamily: note.font || 'Arial',\n          resize: 'none',\n          minHeight: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsEditing(true),\n        children: (_note$content = note.content) !== null && _note$content !== void 0 && _note$content.trim() ? note.content : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placeholder\",\n          children: \"Click to edit...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), ((_note$labels = note.labels) === null || _note$labels === void 0 ? void 0 : _note$labels.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-labels\",\n      children: note.labels.map((label, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"note-label\",\n        children: [label, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-label-btn\",\n          onClick: () => handleRemoveLabel(label),\n          title: \"Remove label\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), showLabelInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-label-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLabel,\n        onChange: e => setNewLabel(e.target.value),\n        placeholder: \"Add label\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleAddLabel();\n          } else if (e.key === 'Escape') {\n            setShowLabelInput(false);\n            setNewLabel('');\n          }\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddLabel,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLabelInput(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-picker\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-options\",\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-option\",\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => handleColorChange(color),\n          title: `Change to ${color}`\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), showFontPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-picker\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: note.font || 'Arial',\n        onChange: e => handleFontChange(e.target.value),\n        onBlur: () => setShowFontPicker(false),\n        autoFocus: true,\n        children: fonts.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: font,\n          style: {\n            fontFamily: font\n          },\n          children: font\n        }, font, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPin(note._id),\n        title: note.pinned ? \"Unpin note\" : \"Pin note\",\n        className: \"action-btn pin-btn\",\n        children: note.pinned ? '📌' : '📍'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowColorPicker(prev => !prev),\n        title: \"Change color\",\n        className: \"action-btn color-btn\",\n        children: \"\\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowFontPicker(prev => !prev),\n        title: \"Change font\",\n        className: \"action-btn font-btn\",\n        children: \"\\uD83D\\uDD24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowLabelInput(prev => !prev),\n        title: \"Add label\",\n        className: \"action-btn label-btn\",\n        children: \"\\uD83C\\uDFF7\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(note._id),\n        title: \"Delete note\",\n        className: \"action-btn delete-btn\",\n        children: \"\\uD83D\\uDDD1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"aEZtx9RJuqGqHtN8UjO5PnnII4I=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Note","note","onDelete","onPin","onUpdate","onSectionMove","_s","_note$content","_note$labels","showLabelInput","setShowLabelInput","newLabel","setNewLabel","isEditing","setIsEditing","editedContent","setEditedContent","content","showColorPicker","setShowColorPicker","showFontPicker","setShowFontPicker","noteRef","colors","fonts","handleAddLabel","trimmed","trim","updatedLabels","labels","uniqueLabels","Set","handleRemoveLabel","labelToRemove","filter","l","handleContentUpdate","handleColorChange","color","handleFontChange","font","handleDragStart","e","dataTransfer","setData","JSON","stringify","noteId","_id","type","handleDragEnd","canvas","document","querySelector","canvasRect","getBoundingClientRect","noteEl","current","newX","clientX","left","offsetWidth","newY","clientY","top","offsetHeight","gridSize","snappedX","Math","round","snappedY","maxX","maxY","clampedX","max","min","clampedY","x","y","className","pinned","style","backgroundColor","fontFamily","position","zIndex","draggable","onDragStart","onDragEnd","ref","children","value","onChange","target","onBlur","onKeyDown","key","ctrlKey","autoFocus","placeholder","resize","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","label","idx","title","prev","_c","$RefreshReg$"],"sources":["D:/text-notes-tool/client/src/components/Note.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Note.css';\r\n\r\nconst Note = ({ note, onDelete, onPin, onUpdate, onSectionMove }) => {\r\n  const [showLabelInput, setShowLabelInput] = useState(false);\r\n  const [newLabel, setNewLabel] = useState('');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedContent, setEditedContent] = useState(note.content || '');\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [showFontPicker, setShowFontPicker] = useState(false);\r\n  const noteRef = useRef(null);\r\n\r\n  const colors = ['#FFD700', '#FFB6C1', '#98FB98', '#87CEEB', '#DDA0DD', '#F0E68C', '#FFA07A'];\r\n  const fonts = ['Arial', 'Georgia', 'Times New Roman', 'Courier New', 'Verdana', 'Comic Sans MS'];\r\n\r\n  const handleAddLabel = () => {\r\n    const trimmed = newLabel.trim();\r\n    if (!trimmed) return;\r\n    const updatedLabels = note.labels ? [...note.labels, trimmed] : [trimmed];\r\n    const uniqueLabels = [...new Set(updatedLabels)];\r\n    onUpdate({ ...note, labels: uniqueLabels });\r\n    setNewLabel('');\r\n    setShowLabelInput(false);\r\n  };\r\n\r\n  const handleRemoveLabel = (labelToRemove) => {\r\n    const updatedLabels = note.labels.filter((l) => l !== labelToRemove);\r\n    onUpdate({ ...note, labels: updatedLabels });\r\n  };\r\n\r\n  const handleContentUpdate = () => {\r\n    setIsEditing(false);\r\n    if (editedContent !== note.content) {\r\n      onUpdate({ ...note, content: editedContent });\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    onUpdate({ ...note, color });\r\n    setShowColorPicker(false);\r\n  };\r\n\r\n  const handleFontChange = (font) => {\r\n    onUpdate({ ...note, font });\r\n    setShowFontPicker(false);\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    e.dataTransfer.setData('text/plain', JSON.stringify({\r\n      noteId: note._id,\r\n      type: 'note'\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    const canvas = document.querySelector('.note-canvas');\r\n    if (!canvas) return;\r\n\r\n    const canvasRect = canvas.getBoundingClientRect();\r\n    const noteEl = noteRef.current;\r\n    const newX = e.clientX - canvasRect.left - noteEl.offsetWidth / 2;\r\n    const newY = e.clientY - canvasRect.top - noteEl.offsetHeight / 2;\r\n\r\n    // Grid snapping (20px grid)\r\n    const gridSize = 20;\r\n    const snappedX = Math.round(newX / gridSize) * gridSize;\r\n    const snappedY = Math.round(newY / gridSize) * gridSize;\r\n\r\n    const maxX = canvas.offsetWidth - noteEl.offsetWidth;\r\n    const maxY = canvas.offsetHeight - noteEl.offsetHeight;\r\n    const clampedX = Math.max(0, Math.min(snappedX, maxX));\r\n    const clampedY = Math.max(0, Math.min(snappedY, maxY));\r\n\r\n    onUpdate({ ...note, x: clampedX, y: clampedY });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`note ${note.pinned ? 'pinned' : ''}`}\r\n      style={{\r\n        backgroundColor: note.color || '#FFD700',\r\n        fontFamily: note.font || 'Arial',\r\n        left: note.x,\r\n        top: note.y,\r\n        position: 'absolute',\r\n        zIndex: isEditing ? 1000 : 100\r\n      }}\r\n      draggable\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      ref={noteRef}\r\n    >\r\n      <div className=\"note-content\">\r\n        {isEditing ? (\r\n          <textarea\r\n            value={editedContent}\r\n            onChange={(e) => setEditedContent(e.target.value)}\r\n            onBlur={handleContentUpdate}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter' && e.ctrlKey) {\r\n                handleContentUpdate();\r\n              }\r\n            }}\r\n            autoFocus\r\n            placeholder=\"Write your note...\"\r\n            style={{ \r\n              fontFamily: note.font || 'Arial',\r\n              resize: 'none',\r\n              minHeight: '60px'\r\n            }}\r\n          />\r\n        ) : (\r\n          <p onClick={() => setIsEditing(true)}>\r\n            {note.content?.trim() ? note.content : (\r\n              <span className=\"placeholder\">Click to edit...</span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {note.labels?.length > 0 && (\r\n        <div className=\"note-labels\">\r\n          {note.labels.map((label, idx) => (\r\n            <span className=\"note-label\" key={idx}>\r\n              {label}\r\n              <button \r\n                className=\"remove-label-btn\"\r\n                onClick={() => handleRemoveLabel(label)}\r\n                title=\"Remove label\"\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {showLabelInput && (\r\n        <div className=\"note-label-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newLabel}\r\n            onChange={(e) => setNewLabel(e.target.value)}\r\n            placeholder=\"Add label\"\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleAddLabel();\r\n              } else if (e.key === 'Escape') {\r\n                setShowLabelInput(false);\r\n                setNewLabel('');\r\n              }\r\n            }}\r\n            autoFocus\r\n          />\r\n          <button onClick={handleAddLabel}>Add</button>\r\n          <button onClick={() => setShowLabelInput(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {showColorPicker && (\r\n        <div className=\"color-picker\">\r\n          <div className=\"color-options\">\r\n            {colors.map(color => (\r\n              <div\r\n                key={color}\r\n                className=\"color-option\"\r\n                style={{ backgroundColor: color }}\r\n                onClick={() => handleColorChange(color)}\r\n                title={`Change to ${color}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showFontPicker && (\r\n        <div className=\"font-picker\">\r\n          <select \r\n            value={note.font || 'Arial'} \r\n            onChange={(e) => handleFontChange(e.target.value)}\r\n            onBlur={() => setShowFontPicker(false)}\r\n            autoFocus\r\n          >\r\n            {fonts.map(font => (\r\n              <option key={font} value={font} style={{ fontFamily: font }}>\r\n                {font}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"note-actions\">\r\n        <button \r\n          onClick={() => onPin(note._id)} \r\n          title={note.pinned ? \"Unpin note\" : \"Pin note\"}\r\n          className=\"action-btn pin-btn\"\r\n        >\r\n          {note.pinned ? '📌' : '📍'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={() => setShowColorPicker(prev => !prev)}\r\n          title=\"Change color\"\r\n          className=\"action-btn color-btn\"\r\n        >\r\n          🎨\r\n        </button>\r\n        \r\n        <button\r\n          onClick={() => setShowFontPicker(prev => !prev)}\r\n          title=\"Change font\"\r\n          className=\"action-btn font-btn\"\r\n        >\r\n          🔤\r\n        </button>\r\n        \r\n        <button\r\n          onClick={() => setShowLabelInput(prev => !prev)}\r\n          title=\"Add label\"\r\n          className=\"action-btn label-btn\"\r\n        >\r\n          🏷️\r\n        </button>\r\n        \r\n        <button \r\n          onClick={() => onDelete(note._id)} \r\n          title=\"Delete note\"\r\n          className=\"action-btn delete-btn\"\r\n        >\r\n          🗑️\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}